# Maintainer: Zelun Kong <zelun.kong@outlook.com>

pkgname=
pkgver=
pkgrel=1
epoch=
pkgdesc=""
arch=('x86_64')
url="https://www.mesa3d.org"
license=('KZL')
groups=()
depends=()
makedepends=()
checkdepends=()
optdepends=()
provides=()
conflicts=()
replaces=()
backup=()
options=()
install=$pkgname.install
changelog=
source=($pkgname-$pkgver.tar.gz)
noextract=()
validpgpkeys=()
sha256sums=()

pkgver() {
  cd $pkgname

  git describe --tags | sed 's/-/+/g'
}

###############################################################################

prepare() {

}

###############################################################################

build() {
  cd $pkgname-$pkgver

  ./configure \
    --prefix=/usr \
    --bindir=/usr/bin \
    --sbindir=/usr/sbin \
    --libexecdir=/usr/libexec/$pkgname \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --runstatedir=/run \
    --datarootdir=/usr/share


  make
}

check() {
  cd $pkgname-$pkgver

  make -k check || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver

  make DESTDIR="$pkgdir" install
}

###############################################################################

build() {
  cd $pkgname-$pkgver

  meson setup \
    --prefix /usr \
    --auto-features enabled \
    --optimization 2 \
    -D b_lto=true \
    -D b_pie=true \
    build

  meson compile -C build
}

check() {
  cd $pkgname-$pkgver

  meson test -C build || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver

  meson install -C build --destdir="$pkgdir"
}

###############################################################################

build() {
  cd $pkgname-$pkgver

  cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_C_FLAGS="$CFLAGS $CPPFLAGS" \
    -DCMAKE_CXX_FLAGS="$CXXFLAGS $CPPFLAGS" \
    -S . \
    -B build \
    -LAH

  cmake --build build
}

check() {
  cd $pkgname-$pkgver

  cmake --build build --target tests || warning "Check failed."
}

package() {
  cd $pkgname-$pkgver

  DESTDIR="$pkgdir" cmake --build build --target install
}
