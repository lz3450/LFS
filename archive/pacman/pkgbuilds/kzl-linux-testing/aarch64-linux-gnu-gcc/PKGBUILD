# Maintainer: Zelun Kong <zelun.kong@outlook.com>

# from scratch
# linux-api-header -> binutils -> gcc (stage 1) -> glibc -> gcc (stage2)

# update
# linux-api-header -> binutils -> glibc -> gcc (stage2)

_target=aarch64-linux-gnu
_sysroot=/usr/$_target
pkgname=$_target-gcc
pkgver=9.3.0
# _mpcver=1.1.0
# _mpfrver=4.0.2
# _gmpver=6.2.0
_islver=0.21
pkgrel=1
pkgdesc="The GNU Compiler Collection ($_target)"
arch=('x86_64')
url="https://gcc.gnu.org"
# stage 1
# depends=($_target-binutils mpc)
# stage 2
depends=($_target-binutils $_target-glibc mpc)
options=(!strip)
# https://ftp.gnu.org/gnu/mpc/mpc-$_mpcver.tar.gz{,.sig}
# https://ftp.gnu.org/gnu/mpfr/mpfr-$_mpfrver.tar.xz{,.sig}
# https://gmplib.org/download/gmp/gmp-$_gmpver.tar.lz{,.sig}
source=(https://ftp.gnu.org/gnu/gcc/gcc-$pkgver/gcc-$pkgver.tar.xz{,.sig}
        http://isl.gforge.inria.fr/isl-$_islver.tar.xz)
sha256sums=('71e197867611f6054aa1119b13a0c0abac12834765fe2d81f35ac57f84f742d1'
            'SKIP'
            '777058852a3db9500954361e294881214f6ecd4b594c00da5eee974cd6a54960')
validpgpkeys=('33C235A34C46AA3FFB293709A328C3A2C3C45C06')

prepare() {
  cd gcc-$pkgver
  
  mkdir build

  # mv ../mpc-$_mpcver mpc
  # mv ../mpfr-$_mpfrver mpfr
  # mv ../gmp-$_gmpver gmp
  mv ../isl-$_islver isl
  
  sed -e "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" -i {libiberty,gcc}/configure

  # Set the default directory name for 64-bit libraries to “lib”
  sed -e '/m64=/s/lib64/lib/' -i.orig gcc/config/i386/t-linux64
  sed -e '/mabi.lp64=/s/lib64/lib/' -i.orig gcc/config/aarch64/t-aarch64-linux
}

build() {
  cd gcc-$pkgver/build

  # stage 1
  # ../configure \
  #   --with-pkgversion="KZL $pkgver-$pkgrel ($_target stage1)" \
  #   --target=$_target \
  #   --host=$CHOST \
  #   --build=$CHOST \
  #   --prefix=/usr \
  #   --libexecdir=/usr/lib \
  #   --libdir=/usr/lib \
  #   --disable-shared \
  #   --disable-multilib \
  #   --disable-threads \
  #   --enable-__cxa_atexit \
  #   --enable-gnu-indirect-function \
  #   --enable-languages=c,c++ \
  #   --disable-libssp \
  #   --enable-default-pie \
  #   --enable-default-ssp \
  #   --disable-checking \
  #   --disable-nls \
  #   --with-system-zlib \
  #   --without-isl \
  #   --enable-linker-build-id \
  #   --with-linker-hash-style=gnu \
  #   --enable-gnu-unique-object \
  #   --enable-lto \
  #   --with-glibc-version=2.31 \
  #   --with-sysroot=$_sysroot \
  #   --with-build-sysroot=$_sysroot \
  #   --with-native-system-header-dir=/include \
  #   --disable-install-libiberty \
  #   --enable-fix-cortex-a53-835769 \
  #   --enable-fix-cortex-a53-843419 \
  #   --disable-plugin \
  #   --disable-libstdcxx-pch \
  #   --enable-clocale=gnu \
  #   --without-headers \
  #   --with-newlib \
  #   --disable-libstdcxx \
  #   --disable-libquadmath \
  #   --disable-libatomic \
  #   --disable-libgomp \
  #   --disable-libvtv

  # make all-gcc all-target-libgcc

  # stage 2
  ../configure \
    --with-pkgversion="KZL $pkgver-$pkgrel ($_target)" \
    --target=$_target \
    --host=$CHOST \
    --build=$CHOST \
    --prefix=/usr \
    --libexecdir=/usr/lib \
    --libdir=/usr/lib \
    --enable-shared \
    --disable-multilib \
    --enable-threads=posix \
    --enable-__cxa_atexit \
    --enable-gnu-indirect-function \
    --enable-languages=c,c++,fortran,lto \
    --disable-libssp \
    --enable-default-pie \
    --enable-default-ssp \
    --enable-checking=release \
    --disable-nls \
    --with-system-zlib \
    --with-isl \
    --enable-linker-build-id \
    --with-linker-hash-style=gnu \
    --enable-gnu-unique-object \
    --enable-lto \
    --with-glibc-version=2.31 \
    --with-sysroot=$_sysroot \
    --with-build-sysroot=$_sysroot \
    --with-native-system-header-dir=/include \
    --disable-install-libiberty \
    --enable-fix-cortex-a53-835769 \
    --enable-fix-cortex-a53-843419 \
    --disable-plugin \
    --disable-libstdcxx-pch \
    --enable-clocale=gnu

  make
}

check() {
  cd gcc-$pkgver/build

  make -k check || warning "Check failed."
}

package() {
  cd gcc-$pkgver/build

  # stage 1
  # make DESTDIR="$pkgdir/" install-gcc install-target-libgcc
  
  # stage 2
  make DESTDIR="$pkgdir/" install

  # strip target binaries
  find "$pkgdir"/usr/lib/gcc/$_target/ "$pkgdir"/$_sysroot/lib/ \
       -type f -and \( -name \*.a -or -name \*.o \) \
       -exec $_target-objcopy -R .comment -R .note -R .debug_info -R .debug_aranges \
          -R .debug_pubnames -R .debug_pubtypes -R .debug_abbrev -R .debug_line \
          -R .debug_str -R .debug_ranges -R .debug_loc '{}' \;

  # strip host binaries
  find "$pkgdir"/usr/bin/ "$pkgdir"/usr/lib/gcc/$_target/ -type f -and \( -executable \) -exec strip '{}' \;

  # stage 1 & 2
  # remove files that conflict with host gcc package
  rmdir "$pkgdir"/usr/include/
  rm -rf "$pkgdir"/usr/share/
}
