# Maintainer: Zelun Kong <zelun.kong@outlook.com>

pkgname=nvidia
pkgver=510.54
pkgrel=1
epoch=1
arch=('x86_64')
url="http://www.nvidia.com/"
license=('KZL')
depends=(linux linux-headers)
optdepends=("opencl-headers: headers necessary for OpenCL development")
provides=(opencl-nvidia)
options=(!strip)
source=(https://us.download.nvidia.com/XFree86/Linux-x86_64/$pkgver/NVIDIA-Linux-x86_64-$pkgver.run)
sha256sums=('4c20deccae3fe347adfd0e6989a306f9024fdadf831adc1e8e60855675335161')

prepare() {
  sh NVIDIA-Linux-x86_64-$pkgver.run --extract-only
  cd NVIDIA-Linux-x86_64-$pkgver
  bsdtar -xf nvidia-persistenced-init.tar.bz2
}

build() {
  cd NVIDIA-Linux-x86_64-$pkgver

  make -C kernel
}

package() {
  cd NVIDIA-Linux-x86_64-$pkgver

  ./nvidia-installer \
    --accept-license \
    --expert \
    --x-prefix="$pkgdir"/opt/nvidia \
    --opengl-prefix="$pkgdir"/opt/nvidia \
    --no-install-compat32-libs \
    --utility-prefix="$pkgdir"/opt/nvidia \
    --documentation-prefix="$pkgdir"/opt/nvidia \
    --application-profile-path="$pkgdir"/opt/nvidia/share \
    --log-file-name=/tmp/nvidia.log \
    --no-precompiled-interface \
    --no-backup \
    --no-recursion \
    --no-kernel-module \
    --no-nouveau-check \
    --no-distro-scripts \
    --no-wine-files \
    --no-kernel-module-source \
    --no-check-for-alternate-installs \
    -j 8 \
    --force-libglx-indirect \
    --skip-depmod \
    --systemd-unit-prefix="$pkgdir"/usr/lib/systemd/system \
    --systemd-sleep-prefix="$pkgdir"/usr/lib/systemd/system-sleep \
    --systemd-sysconf-prefix="$pkgdir"/etc/systemd/system

  echo "u nvidia-persistenced 143 'NVIDIA Persistence Daemon'" | install -Dm644 /dev/stdin "$pkgdir"/usr/lib/sysusers.d/$pkgname.conf

}

# package() {
#   cd NVIDIA-Linux-x86_64-$pkgver

#   # driver
#   install -Dm644 kernel/nvidia.ko "$pkgdir"/usr/lib/modules/$(uname -r)/kernel/drivers/video/nvidia.ko
#   install -Dm644 kernel/nvidia-drm.ko "$pkgdir"/usr/lib/modules/$(uname -r)/kernel/drivers/video/nvidia-drm.ko
#   install -Dm644 kernel/nvidia-modeset.ko "$pkgdir"/usr/lib/modules/$(uname -r)/kernel/drivers/video/nvidia-modeset.ko
#   install -Dm644 kernel/nvidia-uvm.ko "$pkgdir"/usr/lib/modules/$(uname -r)/kernel/drivers/video/nvidia-uvm.ko
#   install -Dm644 kernel/nvidia-peermem.ko "$pkgdir"/usr/lib/modules/$(uname -r)/kernel/drivers/video/nvidia-peermem.ko

#   echo -e "blacklist nouveau\noptions nouveau modeset=0" | install -Dm644 /dev/stdin "$pkgdir"/usr/lib/modprobe.d/$pkgbase.conf

#   # OpenCL
#   install -Dm644 nvidia.icd "$pkgdir"/etc/OpenCL/vendors/nvidia.icd
#   install -Dm755 libnvidia-compiler.so.$pkgver "$pkgdir"/usr/lib/libnvidia-compiler.so.$pkgver
#   install -Dm755 libnvidia-opencl.so.$pkgver "$pkgdir"/usr/lib/libnvidia-opencl.so.$pkgver

#   rm nvidia.icd libnvidia-{compiler,opencl}.so.$pkgver

#   # X driver
#   install -Dm755 nvidia_drv.so "$pkgdir"/usr/lib/xorg/modules/drivers/nvidia_drv.so

#   rm nvidia_drv.so

#   # Wayland/GBM
#   install -Dm755 libnvidia-egl-gbm.so.1* -t "$pkgdir"/usr/lib/
#   install -Dm644 15_nvidia_gbm.json "$pkgdir"/usr/share/egl/egl_external_platform.d/15_nvidia_gbm.json
#   install -dm755 "$pkgdir"/usr/lib/gbm/
#   ln -s libnvidia-allocator.so.$pkgver "$pkgdir"/usr/lib/gbm/nvidia-drm_gbm.so

#   rm libnvidia-egl-gbm.so.1* 15_nvidia_gbm.json

#   # firmware
#   install -Dm644 firmware/gsp.bin "$pkgdir"/usr/lib/firmware/nvidia/$pkgver/gsp.bin

#   rm firmware/gsp.bin

#   # GLX extension module for X
#   install -Dm755 libglxserver_nvidia.so.$pkgver "$pkgdir"/usr/lib/nvidia/xorg/libglxserver_nvidia.so.$pkgver
#   ln -s libglxserver_nvidia.so.$pkgver "$pkgdir"/usr/lib/nvidia/xorg/libglxserver_nvidia.so

#   install -Dm755 libGLX_nvidia.so.$pkgver "$pkgdir"/usr/lib/libGLX_nvidia.so.$pkgver

#   rm lib{glxserver,GLX}_nvidia.so.$pkgver

#   # OpenGL
#   install -Dm755 libEGL_nvidia.so.$pkgver "$pkgdir"/usr/lib/libEGL_nvidia.so.$pkgver
#   install -Dm755 libGLESv1_CM_nvidia.so.$pkgver "$pkgdir"/usr/lib/libGLESv1_CM_nvidia.so.$pkgver
#   install -Dm755 libGLESv2_nvidia.so.$pkgver "$pkgdir"/usr/lib/libGLESv2_nvidia.so.$pkgver
#   install -Dm644 10_nvidia.json "$pkgdir"/usr/share/glvnd/egl_vendor.d/10_nvidia.json

#   rm lib{EGL,GLESv1_CM,GLESv2}_nvidia.so.$pkgver
#   rm 10_nvidia.json

#   install -Dm755 libnvidia-glcore.so.$pkgver "$pkgdir"/usr/lib/libnvidia-glcore.so.$pkgver
#   install -Dm755 libnvidia-eglcore.so.$pkgver "$pkgdir"/usr/lib/libnvidia-eglcore.so.$pkgver
#   install -Dm755 libnvidia-glsi.so.$pkgver "$pkgdir"/usr/lib/libnvidia-glsi.so.$pkgver

#   rm libnvidia-{glcore,eglcore,glsi}.so.$pkgver

#   # misc
#   install -Dm755 libnvidia-fbc.so.$pkgver "$pkgdir"/usr/lib/libnvidia-fbc.so.$pkgver
#   install -Dm755 libnvidia-encode.so.$pkgver "$pkgdir"/usr/lib/libnvidia-encode.so.$pkgver
#   install -Dm755 libnvidia-cfg.so.$pkgver "$pkgdir"/usr/lib/libnvidia-cfg.so.$pkgver
#   install -Dm755 libnvidia-ml.so.$pkgver "$pkgdir"/usr/lib/libnvidia-ml.so.$pkgver
#   install -Dm755 libnvidia-glvkspirv.so.$pkgver "$pkgdir"/usr/lib/libnvidia-glvkspirv.so.$pkgver
#   install -Dm755 libnvidia-allocator.so.$pkgver "$pkgdir"/usr/lib/libnvidia-allocator.so.$pkgver
#   install -Dm755 libnvidia-vulkan-producer.so.$pkgver "$pkgdir"/usr/lib/libnvidia-vulkan-producer.so.$pkgver
#   ln -s libnvidia-vulkan-producer.so.$pkgver "$pkgdir"/usr/lib/libnvidia-vulkan-producer.so

#   rm libnvidia-{fbc,encode,cfg,ml,glvkspirv,allocator,vulkan-producer}.so.$pkgver

#   # Vulkan ICD
#   install -Dm644 nvidia_icd.json "$pkgdir"/usr/share/vulkan/icd.d/nvidia_icd.json
#   install -Dm644 nvidia_layers.json "$pkgdir"/usr/share/vulkan/implicit_layer.d/nvidia_layers.json

#   rm nvidia_{layers,icd}.json

#   # VDPAU
#   install -Dm755 libvdpau_nvidia.so.$pkgver "$pkgdir"/usr/lib/vdpau/libvdpau_nvidia.so.$pkgver

#   rm libvdpau_nvidia.so.$pkgver

#   # nvidia-tls library
#   install -Dm755 libnvidia-tls.so.$pkgver $pkgdir/usr/lib/libnvidia-tls.so.$pkgver

#   rm libnvidia-tls.so.$pkgver

#   # CUDA
#   install -Dm755 libcuda.so.$pkgver $pkgdir/usr/lib/libcuda.so.$pkgver
#   install -Dm755 libnvcuvid.so.$pkgver $pkgdir/usr/lib/libnvcuvid.so.$pkgver

#   rm {libcuda,libnvcuvid}.so.$pkgver

#   # PTX JIT Compiler (Parallel Thread Execution (PTX), a pseudo-assembly language for CUDA)
#   install -Dm755 libnvidia-ptxjitcompiler.so.$pkgver "$pkgdir"/usr/lib/libnvidia-ptxjitcompiler.so.$pkgver

#   rm libnvidia-ptxjitcompiler.so.$pkgver

#   # Raytracing
#   install -Dm755 libnvoptix.so.$pkgver "$pkgdir"/usr/lib/libnvoptix.so.$pkgver
#   install -Dm755 libnvidia-rtcore.so.$pkgver "$pkgdir"/usr/lib/libnvidia-rtcore.so.$pkgver

#   rm {libnvoptix,libnvidia-rtcore}.so.$pkgver

#   # NGX
#   install -Dm755 nvidia-ngx-updater "$pkgdir"/usr/bin/nvidia-ngx-updater
#   install -Dm755 libnvidia-ngx.so.$pkgver "$pkgdir"/usr/lib/libnvidia-ngx.so.$pkgver
#   install -Dm755 _nvngx.dll "$pkgdir"/usr/lib/nvidia/wine/_nvngx.dll
#   install -Dm755 nvngx.dll "$pkgdir"/usr/lib/nvidia/wine/nvngx.dll

#   rm nvidia-ngx-updater libnvidia-ngx.so.$pkgver _nvngx.dll nvngx.dll

#   # Optical flow
#   install -Dm755 libnvidia-opticalflow.so.$pkgver "$pkgdir"/usr/lib/libnvidia-opticalflow.so.$pkgver

#   rm libnvidia-opticalflow.so.$pkgver

#   # DEBUG
#   install -Dm755 nvidia-debugdump "$pkgdir"/usr/bin/nvidia-debugdump

#   rm nvidia-debugdump

#   # nvidia-xconfig
#   install -Dm755 nvidia-xconfig "$pkgdir"/usr/bin/nvidia-xconfig
#   install -Dm644 nvidia-xconfig.1.gz "$pkgdir"/usr/share/man/man1/nvidia-xconfig.1.gz

#   rm nvidia-xconfig{,.1.gz}

#   # nvidia-bug-report
#   install -Dm755 nvidia-bug-report.sh "$pkgdir"/usr/bin/nvidia-bug-report.sh

#   rm nvidia-bug-report.sh

#   # nvidia-smi
#   install -Dm755 nvidia-smi "$pkgdir"/usr/bin/nvidia-smi
#   install -Dm644 nvidia-smi.1.gz "$pkgdir"/usr/share/man/man1/nvidia-smi.1.gz

#   rm nvidia-smi{,.1.gz}

#   # nvidia-cuda-mps
#   install -Dm755 nvidia-cuda-mps-server "$pkgdir"/usr/bin/nvidia-cuda-mps-server
#   install -Dm755 nvidia-cuda-mps-control "$pkgdir"/usr/bin/nvidia-cuda-mps-control
#   install -Dm644 nvidia-cuda-mps-control.1.gz "$pkgdir"/usr/share/man/man1/nvidia-cuda-mps-control.1.gz

#   rm nvidia-cuda-mps-server nvidia-cuda-mps-control{,.1.gz}

#   # nvidia-modprobe
#   install -D -m4755 nvidia-modprobe "$pkgdir"/usr/bin/nvidia-modprobe
#   install -Dm644 nvidia-modprobe.1.gz "$pkgdir"/usr/share/man/man1/nvidia-modprobe.1.gz

#   rm nvidia-modprobe{,.1.gz}

#   # nvidia-persistenced
#   install -Dm755 nvidia-persistenced "$pkgdir"/usr/bin/nvidia-persistenced
#   install -Dm644 nvidia-persistenced.1.gz "$pkgdir"/usr/share/man/man1/nvidia-persistenced.1.gz
#   install -Dm644 nvidia-persistenced-init/systemd/nvidia-persistenced.service.template "$pkgdir"/usr/lib/systemd/system/nvidia-persistenced.service
#   sed -i 's/__USER__/nvidia-persistenced/' "$pkgdir"/usr/lib/systemd/system/nvidia-persistenced.service
#   echo "u nvidia-persistenced 143 'NVIDIA Persistence Daemon'" | install -Dm644 /dev/stdin "$pkgdir"/usr/lib/sysusers.d/$pkgname.conf

#   rm nvidia-persistenced{,.1.gz} nvidia-persistenced-init/systemd/nvidia-persistenced.service.template

#   # application profiles
#   install -Dm644 nvidia-application-profiles-$pkgver-rc "$pkgdir"/usr/share/nvidia/nvidia-application-profiles-$pkgver-rc
#   install -Dm644 nvidia-application-profiles-$pkgver-key-documentation "$pkgdir"/usr/share/nvidia/nvidia-application-profiles-$pkgver-key-documentation

#   rm nvidia-application-profiles-$pkgver-{rc,key-documentation}

#   # new power management support
#   install -Dm644 systemd/system/*.service -t "$pkgdir"/usr/lib/systemd/system
#   install -Dm755 systemd/system-sleep/nvidia "$pkgdir"/usr/lib/systemd/system-sleep/nvidia
#   install -Dm755 systemd/nvidia-sleep.sh "$pkgdir"/usr/bin/nvidia-sleep.sh
#   install -Dm755 nvidia-powerd "$pkgdir"/usr/bin/nvidia-powerd
#   install -Dm644 nvidia-dbus.conf "$pkgdir"/usr/share/dbus-1/system.d/nvidia-dbus.conf

#   rm systemd/{system/*.service,system-sleep/nvidia,nvidia-sleep.sh} nvidia-powerd nvidia-dbus.conf
# }
