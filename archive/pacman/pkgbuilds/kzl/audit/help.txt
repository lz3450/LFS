Configuration of audit 4.0.3:

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-pic[=PKGS]     try to use only PIC/non-PIC objects [default=use
                          both]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --enable-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-listener      Disable auditd network listener support
  --disable-zos-remote    Disable audisp ZOS remote plugin
  --enable-gssapi-krb5    Enable GSSAPI Kerberos 5 support [default=no]
  --enable-experimental   Enable experimental audit components [default=no]

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-python3          enable building python3 bindings
  --with-python-sys-prefix
                          use Python's sys.prefix and sys.exec_prefix values
  --with-python_prefix    override the default PYTHON_PREFIX
  --with-python_exec_prefix
                          override the default PYTHON_EXEC_PREFIX
  --with-golang           enable building golang bindings
  --with-debug            turn on debugging [default=no]
  --with-arm              enable Arm eabi processor support
  --with-aarch64          enable Aarch64 processor support
  --with-riscv            enable riscv processor support
  --with-apparmor         enable AppArmor events
  --with-libwrap=PATH   Compile in libwrap (tcp_wrappers) support.
  --with-io_uring         enable io_uring support
  --with-libcap-ng=auto/yes/no  Add Libcap-ng support default=auto

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  CPP         C preprocessor
  PYTHON      the Python interpreter

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
