`configure' configures nettle 3.9.1 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/nettle]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-public-key    Disable public key algorithms
  --disable-assembler     Disable assembler code
  --disable-static        Do not build any static library
  --disable-shared        Do not build any shared library
  --disable-pic           Do not try to compile library files as position
                          independent code
  --disable-openssl       Do not include openssl glue in the benchmark program
  --enable-gcov           Instrument for gcov (requires a modern gcc)
  --disable-documentation Omit building and installing the documentation.
                          (default=auto)
  --disable-fat           Disable fat library build
  --enable-arm-neon       Enable ARM Neon assembly. (default=auto)
  --enable-arm64-crypto   Enable Arm64 crypto extension. (default=no)
  --enable-x86-aesni      Enable x86_64 aes instructions. (default=no)
  --enable-x86-sha-ni     Enable x86_64 sha_ni instructions. (default=no)
  --enable-x86-pclmul     Enable x86_64 pclmulqdq instructions. (default=no)
  --enable-power-crypto-ext
                          Enable POWER crypto extensions. (default=no)
  --enable-power-altivec  Enable POWER altivec and vsx extensions.
                          (default=no)
  --enable-power9         Enable POWER ISA v3.0. (default=no)
  --enable-s390x-vf       Enable vector facility on z/Architecture.
                          (default=no)
  --enable-s390x-msa      Enable message-security assist extensions on
                          z/Architecture. (default=no)
  --enable-mini-gmp       Enable mini-gmp, used instead of libgmp.
  --enable-ld-version-script
                          enable linker version script (default is enabled
                          when possible)
  --disable-dependency-tracking
                          Disable dependency tracking. Dependency tracking
                          doesn't work with BSD make

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-include-path     A colon-separated list of directories to search for
                          include files
  --with-lib-path         A colon-separated list of directories to search for
                          libraries

Some influential environment variables:
  ASM_FLAGS   Extra flags for processing assembly source files
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CC_FOR_BUILD
              build system C compiler
  CPP         C preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <nettle-bugs@lists.lysator.liu.se>.
