`configure' configures libpng 1.6.40 to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr/local]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/local/bin', `/usr/local/lib' etc.  You can specify
an installation prefix other than `/usr/local' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/libpng]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

Program names:
  --program-prefix=PREFIX            prepend PREFIX to installed program names
  --program-suffix=SUFFIX            append SUFFIX to installed program names
  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-maintainer-mode
                          enable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-werror[=OPT] Pass -Werror or the given argument to the compiler
                          if it is supported
  --enable-unversioned-links
                          Installed libpng header files are placed in a
                          versioned subdirectory and installed libpng library
                          (including DLL) files are versioned. If this option
                          is enabled unversioned links will be created
                          pointing to the corresponding installed files. If
                          you use libpng.pc or libpng-config for all builds
                          you do not need these links, but if you compile
                          programs directly they will typically #include
                          <png.h> and link with -lpng; in that case you need
                          the links. The links can be installed manually using
                          'make install-header-links' and 'make
                          install-library-links' and can be removed using the
                          corresponding uninstall- targets. If you do enable
                          this option every libpng 'make install' will
                          recreate the links to point to the just installed
                          version of libpng. The default is to create the
                          links; use --disable-unversioned-links to change
                          this
  --enable-unversioned-libpng-pc
                          Install the configuration file 'libpng.pc' as a link
                          to the versioned version. This is done by default -
                          use --disable-unversioned-libpng-pc to change this.
  --enable-unversioned-libpng-config
                          Install the configuration file 'libpng-config' as a
                          link to the versioned version. This is done by
                          default - use --disable-unversioned-libpng-config to
                          change this.
  --enable-hardware-optimizations
                          Enable hardware optimizations: =no/off, yes/on:
  --enable-arm-neon     Enable ARM NEON optimizations: =no/off, check, api,
                          yes/on: no/off: disable the optimizations; check:
                          use internal checking code (deprecated and poorly
                          supported); api: disable by default, enable by a
                          call to png_set_option; yes/on: turn on
                          unconditionally. If not specified: determined by the
                          compiler.
  --enable-mips-msa     Enable MIPS MSA optimizations: =no/off, check, api,
                          yes/on: no/off: disable the optimizations; check:
                          use internal checking code (deprecated and poorly
                          supported); api: disable by default, enable by a
                          call to png_set_option; yes/on: turn on
                          unconditionally. If not specified: determined by the
                          compiler.
  --enable-intel-sse    Enable Intel SSE optimizations: =no/off, yes/on:
                          no/off: disable the optimizations; yes/on: enable
                          the optimizations. If not specified: determined by
                          the compiler.
  --enable-powerpc-vsx  Enable POWERPC VSX optimizations: =no/off, check,
                          api, yes/on: no/off: disable the optimizations;
                          check: use internal checking code api: disable by
                          default, enable by a call to png_set_option yes/on:
                          turn on unconditionally. If not specified:
                          determined by the compiler.

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                          both]
  --with-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).
  --with-zlib-prefix    prefix that may have been used in installed zlib
  --with-pkgconfigdir   Use the specified pkgconfig dir (default is
                          libdir/pkgconfig)
  --with-binconfigs     Generate shell libpng-config scripts as well as
                          pkg-config data [default=yes]
  --with-libpng-prefix  prefix libpng exported function (API) names with the
                          given value

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
  CPP         C preprocessor
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.
  PNG_COPTS   additional flags for the C compiler, use this for options that
              would cause configure itself to fail

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <png-mng-implement@lists.sourceforge.net>.
