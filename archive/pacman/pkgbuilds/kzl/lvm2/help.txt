`configure' configures this package to adapt to many kinds of systems.

Usage: ./configure [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print `checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for `--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or `..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [/usr]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, `make install' will install all the files in
`/usr/bin', `/usr/lib' etc.  You can specify
an installation prefix other than `/usr' using `--prefix',
for instance `--prefix=$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/PACKAGE]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
  --target=TARGET   configure for building compilers for TARGET [HOST]

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-dependency-tracking
                          speeds up one-time build.
  --disable-silent-rules  disable silent building
  --enable-static_link    use this to link the tools to their libraries
                          statically (default is dynamic linking
  --disable-thin_check_needs_check
                          required if thin_check version is < 0.3.0
  --disable-cache_check_needs_check
                          required if cache_check version is < 0.5
  --disable-readline      disable readline support
  --enable-editline       enable editline support
  --disable-realtime      disable realtime clock support
  --enable-ocf            enable Open Cluster Framework (OCF) compliant
                          resource agents
  --enable-cmirrord       enable the cluster mirror log daemon
  --enable-debug          enable debugging
  --enable-profiling      gather gcov profiling data
  --enable-valgrind-pool  enable valgrind awareness of pools
  --disable-devmapper     disable LVM2 device-mapper interaction
  --enable-lvmpolld       enable the LVM Polling Daemon
  --enable-lvmlockd-sanlock
                          enable the LVM lock daemon using sanlock
  --enable-lvmlockd-dlm   enable the LVM lock daemon using dlm
  --enable-lvmlockd-dlmcontrol
                          enable lvmlockd remote refresh using libdlmcontrol
  --enable-lvmlockd-idm   enable the LVM lock daemon using idm
  --disable-use-lvmlockd  disable usage of LVM lock daemon
  --disable-use-lvmpolld  disable usage of LVM Poll Daemon
  --enable-notify-dbus    enable LVM notification using dbus
  --disable-systemd-journal
                          disable LVM systemd journaling
  --disable-app-machineid disable LVM system ID using app-specific machine-id
  --disable-blkid_wiping  disable libblkid detection of signatures when wiping
                          and use native code instead
  --enable-udev_sync      enable synchronization with udev processing
  --enable-udev_rules     install rule files needed for udev synchronization
  --enable-udev-rule-exec-detection
                          enable executable path detection in udev rules
  --enable-units-compat   enable output compatibility with old versions that
                          that do not use KiB-style unit suffixes
  --disable-ioctl         disable ioctl calls to device-mapper in the kernel
  --disable-o_direct      disable O_DIRECT
  --enable-cmdlib         build shared command library
  --enable-dbus-service   install D-Bus support
  --enable-pkgconfig      install pkgconfig support
  --enable-write_install  install user writable files
  --disable-fsadm         disable fsadm
  --disable-lvmimportvdo  disable lvm_import_vdo
  --disable-blkdeactivate disable blkdeactivate
  --enable-dmeventd       enable the device-mapper event daemon
  --enable-dmfilemapd     enable the dmstats filemap daemon
  --disable-selinux       disable selinux support
  --disable-blkzeroout    do not use BLKZEROOUT for device zeroing
  --enable-nls            enable Native Language Support

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-user=USER        set the owner of installed files [USER=]
  --with-group=GROUP      set the group owner of installed files [GROUP=]
  --with-device-uid=UID   set the owner used for new device nodes [UID=0]
  --with-device-gid=GID   set the group used for new device nodes [GID=0]
  --with-device-mode=MODE set the mode used for new device nodes [MODE=0600]
  --with-device-nodes-on=ON
                          create nodes on resume or create [ON=resume]
  --with-default-use-devices-file
                          default for lvm.conf devices/use_devicesfile = [0]
  --with-default-name-mangling=MANGLING
                          default name mangling: auto/none/hex [auto]
  --with-snapshots=TYPE   snapshot support: internal/none [internal]
  --with-mirrors=TYPE     mirror support: internal/none [internal]
  --with-default-mirror-segtype=TYPE
                          default mirror segtype: raid1/mirror [raid1]
  --with-default-raid10-segtype=TYPE
                          default mirror segtype: raid10/mirror [raid10]
  --with-default-sparse-segtype=TYPE
                          default sparse segtype: thin/snapshot [thin]
  --with-thin=TYPE        thin provisioning support: internal/none [internal]
  --with-thin-check=PATH  thin_check tool: [autodetect]
  --with-thin-dump=PATH   thin_dump tool: [autodetect]
  --with-thin-repair=PATH thin_repair tool: [autodetect]
  --with-thin-restore=PATH
                          thin_restore tool: [autodetect]
  --with-cache=TYPE       cache support: internal/none [internal]
  --with-cache-check=PATH cache_check tool: [autodetect]
  --with-cache-dump=PATH  cache_dump tool: [autodetect]
  --with-cache-repair=PATH
                          cache_repair tool: [autodetect]
  --with-cache-restore=PATH
                          cache_restore tool: [autodetect]
  --with-vdo=TYPE         vdo support: internal/none [internal]
  --with-vdo-format=PATH  vdoformat tool: [autodetect]
  --with-writecache=TYPE  writecache support: internal/none [internal]
  --with-integrity=TYPE   integrity support: internal/none [internal]
  --with-ocfdir=DIR       install OCF files in
                          [PREFIX/lib/ocf/resource.d/lvm2]
  --with-default-pid-dir=PID_DIR
                          default directory to keep PID files in [autodetect]
  --with-default-dm-run-dir=DM_RUN_DIR
                          default DM run directory [autodetect]
  --with-default-run-dir=RUN_DIR
                          default LVM run directory [autodetect_run_dir/lvm]
  --with-cmirrord-pidfile=PATH
                          cmirrord pidfile [PID_DIR/cmirrord.pid]
  --with-optimisation=OPT C optimisation flag [OPT=-O2]
  --with-symvers=STYLE    use symbol versioning of the shared library
                          [default=gnu]
  --with-lvmlockd-pidfile=PATH
                          lvmlockd pidfile [PID_DIR/lvmlockd.pid]
  --with-lvmpolld-pidfile=PATH
                          lvmpolld pidfile [PID_DIR/lvmpolld.pid]
  --with-systemd-run=PATH systemd-run tool: [autodetect]
  --with-python-sys-prefix
                          use Python's sys.prefix and sys.exec_prefix values
  --with-python_prefix    override the default PYTHON_PREFIX
  --with-python_exec_prefix
                          override the default PYTHON_EXEC_PREFIX
  --with-localedir=DIR    locale-dependent data [DATAROOTDIR/locale]
  --with-confdir=DIR      configuration files in DIR [/etc]
  --with-staticdir=DIR    static binaries in DIR [EPREFIX/sbin]
  --with-usrlibdir=DIR    usrlib in DIR [PREFIX/lib]
  --with-usrsbindir=DIR   usrsbin executables in DIR [PREFIX/sbin]
  --with-libexecdir=DIR   libexec executables in DIR [PREFIX/libexec]
  --with-udev-prefix=UPREFIX
                          install udev rule files in UPREFIX [EPREFIX]
  --with-udevdir=DIR      udev rules in DIR [UPREFIX/lib/udev/rules.d]
  --with-systemdsystemunitdir=DIR
                          systemd service files in DIR
  --with-tmpfilesdir=DIR  install configuration files for management of
                          volatile files and directories in DIR
                          [PREFIX/lib/tmpfiles.d]
  --with-dmeventd-pidfile=PATH
                          dmeventd pidfile [PID_DIR/dmeventd.pid]
  --with-dmeventd-path=PATH
                          dmeventd path [EPREFIX/sbin/dmeventd]
  --with-default-system-dir=DIR
                          default LVM system directory [/etc/lvm]
  --with-default-profile-subdir=SUBDIR
                          default configuration profile subdir [profile]
  --with-default-archive-subdir=SUBDIR
                          default metadata archive subdir [archive]
  --with-default-backup-subdir=SUBDIR
                          default metadata backup subdir [backup]
  --with-default-cache-subdir=SUBDIR
                          default metadata cache subdir [cache]
  --with-default-locking-dir=DIR
                          default locking directory [autodetect_lock_dir/lvm]
  --with-interface=IFACE  choose kernel interface (ioctl) [ioctl]

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CPP         C preprocessor
  PKG_CONFIG  path to pkg-config utility
  PKG_CONFIG_PATH
              directories to add to pkg-config's search path
  PKG_CONFIG_LIBDIR
              path overriding pkg-config's built-in search path
  CPG_CFLAGS  C compiler flags for CPG, overriding pkg-config
  CPG_LIBS    linker flags for CPG, overriding pkg-config
  VALGRIND_CFLAGS
              C compiler flags for VALGRIND, overriding pkg-config
  VALGRIND_LIBS
              linker flags for VALGRIND, overriding pkg-config
  LIBSANLOCKCLIENT_CFLAGS
              C compiler flags for LIBSANLOCKCLIENT, overriding pkg-config
  LIBSANLOCKCLIENT_LIBS
              linker flags for LIBSANLOCKCLIENT, overriding pkg-config
  LIBDLM_CFLAGS
              C compiler flags for LIBDLM, overriding pkg-config
  LIBDLM_LIBS linker flags for LIBDLM, overriding pkg-config
  LIBDLMCONTROL_CFLAGS
              C compiler flags for LIBDLMCONTROL, overriding pkg-config
  LIBDLMCONTROL_LIBS
              linker flags for LIBDLMCONTROL, overriding pkg-config
  LIBSEAGATEILM_CFLAGS
              C compiler flags for LIBSEAGATEILM, overriding pkg-config
  LIBSEAGATEILM_LIBS
              linker flags for LIBSEAGATEILM, overriding pkg-config
  LIBSYSTEMD_CFLAGS
              C compiler flags for LIBSYSTEMD, overriding pkg-config
  LIBSYSTEMD_LIBS
              linker flags for LIBSYSTEMD, overriding pkg-config
  BLKID_CFLAGS
              C compiler flags for BLKID, overriding pkg-config
  BLKID_LIBS  linker flags for BLKID, overriding pkg-config
  UDEV_CFLAGS C compiler flags for UDEV, overriding pkg-config
  UDEV_LIBS   linker flags for UDEV, overriding pkg-config
  PYTHON      the Python interpreter
  SELINUX_CFLAGS
              C compiler flags for SELINUX, overriding pkg-config
  SELINUX_LIBS
              linker flags for SELINUX, overriding pkg-config
  EDITLINE_CFLAGS
              C compiler flags for EDITLINE, overriding pkg-config
  EDITLINE_LIBS
              linker flags for EDITLINE, overriding pkg-config
  systemdsystemunitdir
              value of systemdsystemunitdir for systemd, overriding pkg-config
  systemdutildir
              value of systemdutildir for systemd, overriding pkg-config
  AIO_CFLAGS  C compiler flags for AIO
  AIO_LIBS    linker flags for AIO
  READLINE_CFLAGS
              C compiler flags for readline
  READLINE_LIBS
              linker flags for readline

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
