#!/bin/bash
#
# mkimg.sh
#

set -e
set -u
set -o pipefail
# set -x

umask 0022

# unset __DEBUG__
__DEBUG__=1

SCRIPT_NAME="$(basename "$0")"
SCRIPT_PATH="$0"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

################################################################################

### libraries
. "$SCRIPT_DIR"/lib/log.sh
. "$SCRIPT_DIR"/lib/utils.sh
. "$SCRIPT_DIR"/lib/chroot.sh


### constants and variables
VERSION="1.0"

IMG_FILE="/tmp/raspi.img"

common_deb_pkgs=(
    initramfs-tools
    sudo
    nano
    wpasupplicant iw
    wget curl
    openssh-server
    git
    bash-completion
    zsh
    zsh-syntax-highlighting
    zsh-autosuggestions
    build-essential
)
debian_deb_pkgs=(
    systemd-resolved
    systemd-timesyncd
)
ubuntu_deb_pkgs=(
    linux-firmware-raspi
    # ubuntu-raspi-settings
)

arg_distro=""
arg_fs_type=""
declare -i base_only=0
arg_base_img=""

### functions
create_img_file() {
    info "Creating image..."

    if [[ -f "$IMG_FILE" ]]; then
        rm -f "$IMG_FILE"
    fi

    fallocate -l 1536MiB "$IMG_FILE"

    parted -s "$IMG_FILE" \
        mktable msdos \
        unit s \
        mkpart primary fat32 1s 524287s \
        mkpart primary "$arg_fs_type" 524288s 100% \
        print
}

usage() {
    cat << EOF

Usage: $SCRIPT_NAME -V | --version
Usage: $SCRIPT_NAME -h | --help
Usage: $SCRIPT_NAME -d | --distro <distro> -f | --fs-type <filesystem> [ -b | --base-only ]
Usage: $SCRIPT_NAME -d | --distro <distro> -f | --fs-type <filesystem> [ -u | --use-base <base_image> ]

    -V, --version                   print the script version number and exit
    -h, --help                      print this help message and exit
    -d, --distro <distro>           specify the image distribution (debian, ubuntu)
    -f, --fs-type <filesystem>      specify the image filesystem type (ext4, f2fs)
    -b, --base-only                 only create base image
    -u, --use-base <base_image>     use existing base image

EOF
}

################################################################################

while (( $# > 0 )); do
    case "$1" in
    -V | --version)
        echo "$VERSION"
        exit 0
        ;;
    -h | --help)
        usage
        exit 0
        ;;
    -d | --distro)
        shift
        arg_distro="$1"
        ;;
    -f | --fs-type)
        shift
        arg_fs_type="$1"
        ;;
    -b | --base-only)
        base_only=1
        ;;
    -u | --use-base)
        shift
        arg_base_img="$1"
        ;;
    *)
        usage
        error "Unknown option: $1" 127
        ;;
    esac
    shift
done

case "$arg_distro" in
    debian)
        # Debian specific settings can be added here
        ;;
    ubuntu)
        # Ubuntu specific settings can be added here
        ;;
    *)
        usage
        error "Unsupported distribution \"$arg_distro\"." 2
        ;;
esac

################################################################################

prologue

if [[ -z "$arg_base_img" ]]; then
    create_img_file
elif [[ -f "$arg_base_img" ]]; then
        cp "$arg_base_img" "$IMG_FILE"
else
    error "Base image file does not exist: $arg_base_img" 4
fi

epilogue

### error code
# 2: Unsupported distribution
# 3: Unsupported filesystem type
# 4: Base image file does not exist
# 127: Unknown option
