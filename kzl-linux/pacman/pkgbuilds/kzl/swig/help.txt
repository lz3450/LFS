Configuration of swig 4.3.0:

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --disable-ccache        disable building and installation of ccache-swig
                          executable (default enabled)
  --disable-cpp11-testing disable C++11 and later C++ standards testing even
                          if supported by compiler (default enabled)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --without-maximum-compile-warnings
                          Disable maximum warning verbosity
  --without-pcre          Disable support for regular expressions using PCRE2
  --with-pcre2-prefix=PREFIX
                          Prefix where pcre2 is installed (optional)
  --with-pcre2-exec-prefix=EPREFIX
                          Exec prefix where pcre2 is installed (optional)
  --with-boost[=ARG]      use Boost library from a standard location
                          (ARG=yes), from the specified location (ARG=<path>),
                          or disable it (ARG=no) [ARG=yes]
  --with-boost-libdir=LIB_DIR
                          Force given directory for boost libraries. Note that
                          this will override library path detection, so use
                          this parameter only if default library detection
                          fails and you know exactly where your boost
                          libraries are located.
  --with-libm=STRING      math library
  --with-libc=STRING      C library
  --without-alllang       Disable all languages
  --without-android       Disable Android
  --with-android=path     Set location of android executable
  --with-adb=path         Set location of adb executable - Android Debug Bridge
  --with-ant=path         Set location of ant executable for Android
  --with-ndk-build=path   Set location of Android ndk-build executable
  --without-csharp        Disable CSharp
  --with-cil-interpreter=path     Set location of CIL interpreter for CSharp
  --with-csharp-compiler=path     Set location of CSharp compiler
  --without-d             Disable D
  --with-d2-compiler=path  Set location of D2 compiler (DMD compatible)
  --without-go            Disable Go
  --with-go=path          Set location of Go compiler
  --without-guile         Disable Guile
  --with-guile-config=path
                          Set location of guile-config
  --with-guile=path       Set location of Guile executable
  --with-guile-cflags=cflags   Set cflags required to compile against Guile
  --with-guile-libs=ldflags    Set ldflags needed to link with Guile
  --without-java          Disable Java
  --with-java=path        Set location of java executable
  --with-javac=path       Set location of javac executable
  --with-javaincl=path    Set location of Java include directory
  --without-javascript    Disable Javascript
  --with-jscoreinc=path      Set location of JavaScriptCore/Webkit include directory
  --with-jscorelib=path      Set location of the JavaScriptCore/Webkit library directory
  --with-jsv8inc=path     Set location of Javascript v8 include directory
  --with-jsv8lib=path     Set location of V8 Javascript library directory
  --without-lua           Disable Lua
  --with-lua=path         Set location of Lua executable
  --with-luaincl=path     Set location of Lua include directory
  --with-lualib=path      Set location of Lua library directory
  --without-mzscheme      Disable MzScheme
  --with-mzscheme=path    Set location of MzScheme executable
  --with-mzc=path         Set location of MzScheme's mzc
  --without-ocaml         Disable OCaml
  --with-ocamlc=path      Set location of ocamlc executable
  --with-ocamldlgen=path  Set location of ocamldlgen
  --with-ocamlfind=path   Set location of ocamlfind
  --with-ocamlmktop=path  Set location of ocamlmktop executable
  --with-camlp4=path  Set location of camlp4 executable
  --without-octave        Disable Octave
  --with-octave=path      Set location of Octave executable
  --without-perl5         Disable Perl5
  --with-perl5=path       Set location of Perl5 executable
  --without-php           Disable PHP
  --with-php=path         Set location of PHP executable
  --without-python        Don't probe for Python 2.x
  --with-python=path      Set location of Python 2.x executable
  --without-python3       Don't probe for Python 3.x
  --with-python3=path     Set location of Python 3.x executable
  --without-r             Disable R
  --with-r=path           Set location of R executable (r)
  --without-ruby          Disable Ruby
  --with-ruby=path        Set location of Ruby executable
  --without-scilab        Disable Scilab
  --with-scilab=path      Set location of Scilab executable
  --with-scilab-inc=path  Set location of Scilab include directory
  --without-tcl           Disable Tcl
  --with-tclconfig=path   Set location of tclConfig.sh
  --with-tcl=path         Set location of Tcl package
  --with-tclincl=path     Set location of Tcl include directory
  --with-tcllib=path      Set location of Tcl library directory
  --with-swiglibdir=DIR   Put SWIG system-independent libraries into DIR.

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  PCRE2_CONFIG
              config script used for pcre2
  PCRE2_CFLAGS
              CFLAGS used for pcre2
  PCRE2_LIBS  LIBS used for pcre2
  CPP         C preprocessor

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <https://www.swig.org>.

Configuration of ccache-swig 0.0:

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-zlib           enable zlib support for ccache compression

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
