checking for ICU version numbers... release 76.1, library 76.1, unicode version 16.0
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking whether to build debug libraries... no
checking whether to build release libraries... yes
checking for cc... cc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether cc accepts -g... yes
checking for cc option to enable C11 features... none needed
checking for c++... c++
checking whether the compiler supports GNU C++... yes
checking whether c++ accepts -g... yes
checking for c++ option to enable C++11 features... none needed
configure: versions of the compilers used:
  + cc --version
  cc (KZL 15.1.0.g8-4 2025/04/26 16:58:58 +0000) 15.1.1 20250426
  Copyright (C) 2025 Free Software Foundation, Inc.
  This is free software; see the source for copying conditions.  There is NO
  warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
  + c++ --version
  c++ (KZL 15.1.0.g8-4 2025/04/26 16:58:58 +0000) 15.1.1 20250426
  Copyright (C) 2025 Free Software Foundation, Inc.
  This is free software; see the source for copying conditions.  There is NO
  warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.20... yes
checking for icu-le-hb... no
checking if we have a C11 compiler... yes
configure: Adding CFLAGS option -std=c11
checking how to run the C preprocessor... cc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for python3... python3
checking for gmake... no
checking for gnumake... no
checking for doxygen... no
checking checking for executable suffix... 
checking whether strict compiling is on... yes
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking size of void *... 8
checking whether runnable 64 bit binaries are built by default... yes
checking which Makefile fragment to use for x86_64-pc-linux-gnu... mh-linux
checking for floor in -lm... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... no
checking whether to enable auto cleanup of libraries... no
checking whether to enable draft APIs... yes
checking for ranlib... ranlib
checking for a sed that does not truncate output... /usr/bin/sed
checking for ar... ar
checking whether to enable renaming of symbols... yes
checking whether to enable function and data tracing... no
checking for elf.h... yes
checking whether to enable dynamic loading of plugins. Ignored if plugins disabled.... yes
checking for dlfcn.h... yes
checking for library containing dlopen... none required
checking for dlopen... yes
checking for gettimeofday... yes
checking if we have a C++ compiler... Good
checking if we have a C++17 compiler... yes
configure: Adding CXXFLAGS option -std=c++17
checking for pthread_attr_init in -lpthread... yes
checking for mmap... yes
checking for genccode assembly... -a gcc
checking for dirent.h... yes
checking whether byte ordering is bigendian... no
checking for nl_langinfo... yes
checking for nl_langinfo's argument to obtain the codeset... CODESET
checking for properly overriding new and delete... yes
checking for placement new and delete... yes
checking for popen... yes
checking for tzset... yes
checking for tzname... yes
checking for timezone... yes
checking for strtod_l... yes
checking for xlocale.h... no
checking for wchar.h... yes
checking for library containing wcscpy... none required
checking size of wchar_t... 4
checking for UTF-16 string literal support... available
checking for a library suffix to use... none
CPPFLAGS= $(THREADSCPPFLAGS)  -DU_HAVE_ELF_H=1 -DU_HAVE_STRTOD_L=1 -DU_HAVE_XLOCALE_H=0 
CFLAGS=-march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -flto -ffat-lto-objects -std=c11 -Wall -pedantic -Wshadow -Wpointer-arith -Wmissing-prototypes -Wwrite-strings $(THREADSCFLAGS) 
CXXFLAGS=-march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -flto -ffat-lto-objects -W -Wall -pedantic -Wpointer-arith -Wwrite-strings -Wno-long-long -std=c++17 $(THREADSCXXFLAGS) 
configure: creating ./config.status
config.status: creating icudefs.mk
config.status: creating Makefile
config.status: creating data/pkgdataMakefile
config.status: creating config/Makefile.inc
config.status: creating config/icu.pc
config.status: creating config/pkgdataMakefile
config.status: creating data/Makefile
config.status: creating stubdata/Makefile
config.status: creating common/Makefile
config.status: creating i18n/Makefile
config.status: creating layoutex/Makefile
config.status: creating io/Makefile
config.status: creating extra/Makefile
config.status: creating extra/uconv/Makefile
config.status: creating extra/uconv/pkgdataMakefile
config.status: creating extra/scrptrun/Makefile
config.status: creating tools/Makefile
config.status: creating tools/ctestfw/Makefile
config.status: creating tools/toolutil/Makefile
config.status: creating tools/makeconv/Makefile
config.status: creating tools/genrb/Makefile
config.status: creating tools/genccode/Makefile
config.status: creating tools/gencmn/Makefile
config.status: creating tools/gencnval/Makefile
config.status: creating tools/gendict/Makefile
config.status: creating tools/gentest/Makefile
config.status: creating tools/gennorm2/Makefile
config.status: creating tools/genbrk/Makefile
config.status: creating tools/gensprep/Makefile
config.status: creating tools/icuinfo/Makefile
config.status: creating tools/icupkg/Makefile
config.status: creating tools/icuswap/Makefile
config.status: creating tools/pkgdata/Makefile
config.status: creating tools/icuexportdata/Makefile
config.status: creating tools/tzcode/Makefile
config.status: creating tools/gencfu/Makefile
config.status: creating tools/escapesrc/Makefile
config.status: creating test/Makefile
config.status: creating test/compat/Makefile
config.status: creating test/testdata/Makefile
config.status: creating test/testdata/pkgdataMakefile
config.status: creating test/hdrtst/Makefile
config.status: creating test/intltest/Makefile
config.status: creating test/cintltst/Makefile
config.status: creating test/iotest/Makefile
config.status: creating test/letest/Makefile
config.status: creating test/perf/Makefile
config.status: creating test/perf/collationperf/Makefile
config.status: creating test/perf/collperf/Makefile
config.status: creating test/perf/collperf2/Makefile
config.status: creating test/perf/dicttrieperf/Makefile
config.status: creating test/perf/ubrkperf/Makefile
config.status: creating test/perf/charperf/Makefile
config.status: creating test/perf/convperf/Makefile
config.status: creating test/perf/localecanperf/Makefile
config.status: creating test/perf/normperf/Makefile
config.status: creating test/perf/DateFmtPerf/Makefile
config.status: creating test/perf/howExpensiveIs/Makefile
config.status: creating test/perf/strsrchperf/Makefile
config.status: creating test/perf/unisetperf/Makefile
config.status: creating test/perf/usetperf/Makefile
config.status: creating test/perf/ustrperf/Makefile
config.status: creating test/perf/utfperf/Makefile
config.status: creating test/perf/utrie2perf/Makefile
config.status: creating test/perf/leperf/Makefile
config.status: creating test/fuzzer/Makefile
config.status: creating samples/Makefile
Spawning Python to generate data/rules.mk...
Warning: Unable to find target lstm_res, a dependency of brkitr_brk
Warning: Unable to find target adaboost_res, a dependency of brkitr_brk
Spawning Python to generate test/testdata/rules.mk...

ICU for C/C++ 76.1 is ready to be built.
=== Important Notes: ===
Data Packaging: library
 This means: ICU data will be linked with ICU. A shared data library will be built. 
 To locate data: ICU will use the linked data library. If linked with the stub library located in stubdata/, the application can use udata_setCommonData() or set a data path to override.
Building ICU: Use a GNU make such as make to build ICU.
checking the version of "make"... 4.4.1 (we wanted at least 3.80)
ok
C   apps may want to build with CFLAGS   =  -std=c11
C++ apps may want to build with CXXFLAGS =  -std=c++17
