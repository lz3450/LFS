-- The C compiler identification is GNU 15.1.1
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found BZip2: /usr/lib/libbz2.so (found version "1.0.8")
-- Looking for BZ2_bzCompressInit
-- Looking for BZ2_bzCompressInit - found
-- Found ZLIB: /usr/lib/libz.so (found version "1.3.1")
-- Found Readline: /usr/include
-- Found Editline: /usr/include/editline
-- Looking for dirent.h
-- Looking for dirent.h - found
-- Looking for sys/stat.h
-- Looking for sys/stat.h - found
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for unistd.h
-- Looking for unistd.h - found
-- Looking for windows.h
-- Looking for windows.h - not found
-- Looking for bcopy
-- Looking for bcopy - found
-- Looking for memfd_create
-- Looking for memfd_create - not found
-- Looking for memmove
-- Looking for memmove - found
-- Looking for secure_getenv
-- Looking for secure_getenv - not found
-- Looking for strerror
-- Looking for strerror - found
-- Performing Test HAVE_REALPATH
-- Performing Test HAVE_REALPATH - Success
-- Performing Test HAVE_BUILTIN_MUL_OVERFLOW
-- Performing Test HAVE_BUILTIN_MUL_OVERFLOW - Success
-- Performing Test HAVE_ATTRIBUTE_UNINITIALIZED
-- Performing Test HAVE_ATTRIBUTE_UNINITIALIZED - Success
-- Performing Test HAVE_VISIBILITY
-- Performing Test HAVE_VISIBILITY - Success
-- Performing Test INTEL_CET_ENABLED
-- Performing Test INTEL_CET_ENABLED - Failed
-- 
-- 
-- PCRE2-10.44 configuration summary:
-- 
--   Install prefix .................. : /usr/local
--   C compiler ...................... : /usr/bin/cc
--   C compiler flags ................ : -O3 -DNDEBUG
-- 
--   Build 8 bit PCRE2 library ....... : ON
--   Build 16 bit PCRE2 library ...... : OFF
--   Build 32 bit PCRE2 library ...... : OFF
--   Enable JIT compiling support .... : OFF
--   Use SELinux allocator in JIT .... : OFF
--   Enable Unicode support .......... : ON
--   Newline char/sequence ........... : LF
--   \R matches only ANYCRLF ......... : OFF
--   \C is disabled .................. : OFF
--   EBCDIC coding ................... : OFF
--   EBCDIC coding with NL=0x25 ...... : OFF
--   Rebuild char tables ............. : OFF
--   Internal link size .............. : 2
--   Maximum variable lookbehind ..... : 255
--   Parentheses nest limit .......... : 250
--   Heap limit ...................... : 20000000
--   Match limit ..................... : 10000000
--   Match depth limit ............... : MATCH_LIMIT
--   Build shared libs ............... : OFF
--   Build static libs ............... : ON
--      with PIC enabled ............. : OFF
--   Build pcre2grep ................. : ON
--   Enable JIT in pcre2grep ......... : ON
--   Enable callouts in pcre2grep .... : ON
--   Enable callout fork in pcre2grep. : ON
--   Buffer size for pcre2grep ....... : 20480
--   Build tests (implies pcre2test .. : ON
--                and pcre2grep)
--   Link pcre2grep with libz ........ : ON
--   Link pcre2grep with libbz2 ...... : ON
--   Link pcre2test with libeditline . : OFF
--   Link pcre2test with libreadline . : ON
--   Support Valgrind .................: OFF
--   Use %zu and %td ..................: AUTO
-- 
-- Configuring done (1.0s)
-- Generating done (0.0s)
-- Build files have been written to: /home/kzl/makepkg/build/pcre2/src/pcre2/tmp
-- Cache values
// Build shared libraries.
BUILD_SHARED_LIBS:BOOL=OFF

// Build static libraries.
BUILD_STATIC_LIBS:BOOL=ON

// Path to a file.
BZIP2_INCLUDE_DIR:PATH=/usr/include

// Path to a library.
BZIP2_LIBRARY_DEBUG:FILEPATH=BZIP2_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
BZIP2_LIBRARY_RELEASE:FILEPATH=/usr/lib/libbz2.so

// Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

// Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

// Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

// Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

// C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

// A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar

// A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib

// Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

// Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

// Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

// Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

// Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

// Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

// Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

// Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

// User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

// Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

// Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

// Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

// C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

// Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

// Object code libraries (lib64)
CMAKE_INSTALL_LIBDIR:PATH=lib64

// Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

// Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

// Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

// Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

// C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

// Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

// System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

// Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

// Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

// Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

// Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

// Flags used by the linker during the creation of modules during all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of modules during DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of modules during MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of modules during RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

// Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

// Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

// Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

// Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

// Flags used by the linker during the creation of shared libraries during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of shared libraries during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of shared libraries during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// If set, runtime paths are not added when installing shared libraries, but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

// If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

// Flags used by the linker during the creation of static libraries during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of static libraries during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of static libraries during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of static libraries during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

// Path to a program.
CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND

// If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

// Path to a file.
EDITLINE_INCLUDE_DIR:PATH=/usr/include/editline

// Path to a library.
EDITLINE_LIBRARY:FILEPATH=/usr/lib/libedit.so

// Buffer starting size parameter for pcre2grep. See PCRE2GREP_BUFSIZE in config.h.in for details.
PCRE2GREP_BUFSIZE:STRING=20480

// Buffer maximum size parameter for pcre2grep. See PCRE2GREP_MAX_BUFSIZE in config.h.in for details.
PCRE2GREP_MAX_BUFSIZE:STRING=1048576

// Enable callout string support in pcre2grep.
PCRE2GREP_SUPPORT_CALLOUT:BOOL=ON

// Enable callout string fork support in pcre2grep.
PCRE2GREP_SUPPORT_CALLOUT_FORK:BOOL=ON

// Enable use of Just-in-time compiling in pcre2grep.
PCRE2GREP_SUPPORT_JIT:BOOL=ON

// Build pcre2grep
PCRE2_BUILD_PCRE2GREP:BOOL=ON

// Build 16 bit PCRE2 library
PCRE2_BUILD_PCRE2_16:BOOL=OFF

// Build 32 bit PCRE2 library
PCRE2_BUILD_PCRE2_32:BOOL=OFF

// Build 8 bit PCRE2 library
PCRE2_BUILD_PCRE2_8:BOOL=ON

// Build the tests
PCRE2_BUILD_TESTS:BOOL=ON

// Include debugging code
PCRE2_DEBUG:BOOL=OFF

// Disable the use of %zu and %td (rarely needed)
PCRE2_DISABLE_PERCENT_ZT:BOOL=OFF

// Use EBCDIC coding instead of ASCII. (This is rarely used outside of mainframe systems.)
PCRE2_EBCDIC:BOOL=OFF

// Use 0x25 as EBCDIC NL character instead of 0x15; implies EBCDIC.
PCRE2_EBCDIC_NL25:BOOL=OFF

// Default limit on heap memory (kibibytes). See HEAP_LIMIT in config.h.in for details.
PCRE2_HEAP_LIMIT:STRING=20000000

// Obsolete option: do not use
PCRE2_HEAP_MATCH_RECURSE:BOOL=OFF

// Internal link size (2, 3 or 4 allowed). See LINK_SIZE in config.h.in for details.
PCRE2_LINK_SIZE:STRING=2

// Default limit on internal looping. See MATCH_LIMIT in config.h.in for details.
PCRE2_MATCH_LIMIT:STRING=10000000

// Default limit on internal depth of search. See MATCH_LIMIT_DEPTH in config.h.in for details.
PCRE2_MATCH_LIMIT_DEPTH:STRING=MATCH_LIMIT

// Default limit on variable lookbehinds.
PCRE2_MAX_VARLOOKBEHIND:STRING=255

// If ON, backslash-C (upper case C) is locked out.
PCRE2_NEVER_BACKSLASH_C:BOOL=OFF

// What to recognize as a newline (one of CR, LF, CRLF, ANY, ANYCRLF, NUL).
PCRE2_NEWLINE:STRING=LF

// Default nested parentheses limit. See PARENS_NEST_LIMIT in config.h.in for details.
PCRE2_PARENS_NEST_LIMIT:STRING=250

// Rebuild char tables
PCRE2_REBUILD_CHARTABLES:BOOL=OFF

// Show the final configuration report
PCRE2_SHOW_REPORT:BOOL=ON

// Build the static library with the option position independent code enabled.
PCRE2_STATIC_PIC:BOOL=OFF

// ON=Backslash-R matches only LF CR and CRLF, OFF=Backslash-R matches all Unicode Linebreaks
PCRE2_SUPPORT_BSR_ANYCRLF:BOOL=OFF

// Enable support for Just-in-time compiling.
PCRE2_SUPPORT_JIT:BOOL=OFF

// Enable SELinux compatible execmem allocator in JIT (experimental).
PCRE2_SUPPORT_JIT_SEALLOC:BOOL=OFF

// Enable support for linking pcre2grep with libbz2.
PCRE2_SUPPORT_LIBBZ2:BOOL=ON

// Enable support for linking pcre2test with libedit.
PCRE2_SUPPORT_LIBEDIT:BOOL=OFF

// Enable support for linking pcre2test with libreadline.
PCRE2_SUPPORT_LIBREADLINE:BOOL=ON

// Enable support for linking pcre2grep with libz.
PCRE2_SUPPORT_LIBZ:BOOL=ON

// Enable support for Unicode and UTF-8/UTF-16/UTF-32 encoding.
PCRE2_SUPPORT_UNICODE:BOOL=ON

// Enable Valgrind support.
PCRE2_SUPPORT_VALGRIND:BOOL=OFF

// Path to a file.
READLINE_INCLUDE_DIR:PATH=/usr/include

// Path to a library.
READLINE_LIBRARY:FILEPATH=/usr/lib/libreadline.so

// Path to a file.
ZLIB_INCLUDE_DIR:PATH=/usr/include

// Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=/usr/lib/libz.so

