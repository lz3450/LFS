-- The C compiler identification is GNU 14.2.0
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working C compiler: /usr/bin/cc - skipped
-- Detecting C compile features
-- Detecting C compile features - done
-- Found Python3: /usr/bin/python3.12 (found version "3.12.1") found components: Interpreter
-- Found OpenSSL: /usr/lib/libcrypto.so (found suitable version "3.5.0", minimum required is "1.1.1")
-- Could NOT find Libngtcp2 (missing: LIBNGTCP2_LIBRARY LIBNGTCP2_INCLUDE_DIR) (Required is at least version "1.0.0")
-- Could NOT find Libngtcp2_crypto_quictls (missing: LIBNGTCP2_CRYPTO_QUICTLS_LIBRARY LIBNGTCP2_CRYPTO_QUICTLS_INCLUDE_DIR) (Required is at least version "1.0.0")
-- Could NOT find Libnghttp3 (missing: LIBNGHTTP3_LIBRARY LIBNGHTTP3_INCLUDE_DIR) (Required is at least version "1.1.0")
-- Found Systemd: /usr/include (Required is at least version "209")
-- Found Jansson: /usr/lib/libjansson.so (found suitable version "2.14", minimum required is "2.5")
-- Could NOT find Libevent (missing: LIBEVENT_CORE_LIBRARY LIBEVENT_EXTRA_LIBRARY LIBEVENT_OPENSSL_LIBRARY LIBEVENT_INCLUDE_DIR core extra openssl) (Required is at least version "2.0.8")
-- Found LibXml2: /usr/lib/libxml2.so (found suitable version "2.14.2", minimum required is "2.6.26")
-- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) 
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
-- Found Threads: TRUE
-- Looking for arpa/inet.h
-- Looking for arpa/inet.h - found
-- Looking for fcntl.h
-- Looking for fcntl.h - found
-- Looking for inttypes.h
-- Looking for inttypes.h - found
-- Looking for limits.h
-- Looking for limits.h - found
-- Looking for netdb.h
-- Looking for netdb.h - found
-- Looking for netinet/in.h
-- Looking for netinet/in.h - found
-- Looking for netinet/ip.h
-- Looking for netinet/ip.h - found
-- Looking for pwd.h
-- Looking for pwd.h - found
-- Looking for sys/socket.h
-- Looking for sys/socket.h - found
-- Looking for sys/time.h
-- Looking for sys/time.h - found
-- Looking for syslog.h
-- Looking for syslog.h - found
-- Looking for unistd.h
-- Looking for unistd.h - found
-- Looking for windows.h
-- Looking for windows.h - not found
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for stdint.h
-- Looking for stdint.h - found
-- Looking for stddef.h
-- Looking for stddef.h - found
-- Check size of ssize_t
-- Check size of ssize_t - done
-- Performing Test HAVE_STRUCT_TM_TM_GMTOFF
-- Performing Test HAVE_STRUCT_TM_TM_GMTOFF - Success
-- Looking for _Exit
-- Looking for _Exit - found
-- Looking for accept4
-- Looking for accept4 - found
-- Looking for clock_gettime
-- Looking for clock_gettime - found
-- Looking for mkostemp
-- Looking for mkostemp - found
-- Looking for pipe2
-- Looking for pipe2 - found
-- Looking for GetTickCount64
-- Looking for GetTickCount64 - not found
-- Looking for initgroups
-- Looking for initgroups - found
-- Looking for CLOCK_MONOTONIC
-- Looking for CLOCK_MONOTONIC - found
-- Performing Test OPT_Wpragmas
-- Performing Test OPT_Wpragmas - Success
-- summary of build options:

    Package version: 1.65.0
    Library version: 42:4:28
    Install prefix:  /usr
    Target system:   Linux
    Compiler:
      Build type:     Release
      C compiler:     /usr/bin/cc
      CFLAGS:         -O3  -march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Wp,-D_FORTIFY_SOURCE=3 -flto -ffat-lto-objects
      C++ compiler:   
      CXXFLAGS:        -march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Wp,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -flto -ffat-lto-objects
      WARNCFLAGS:       -W -Wall -Wconversion -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wshadow -Wundef -Wwrite-strings -Waddress -Wattributes -Wcast-align -Wdeclaration-after-statement -Wdiv-by-zero -Wempty-body -Wendif-labels -Wfloat-equal -Wformat-nonliteral -Wformat-security -Wmissing-field-initializers -Wmissing-noreturn -Wno-format-nonliteral -Wredundant-decls -Wsign-conversion -Wstrict-prototypes -Wunreachable-code -Wunused-parameter -Wvla -Wclobbered -Wpragmas
      CXX1XCXXFLAGS:  
      WARNCXXFLAGS:     -Wall
    Python:
      Python:          /usr/bin/python3.12
      Python3_VERSION: 3.12.1
    Test:
      Failmalloc:     ON
      Build Test:     OFF
    Libs:
      OpenSSL:        TRUE (LIBS='')
      wolfSSL:         (LIBS='')
      Libxml2:        TRUE (LIBS='/usr/lib/libxml2.so')
      Libev:           (LIBS='')
      Libc-ares:       (LIBS='')
      Libngtcp2:       (LIBS='')
      Libngtcp2_crypto_quictls:  (LIBS='')
      Libngtcp2_crypto_wolfssl:  (LIBS='')
      Libnghttp3:      (LIBS='')
      Libbpf:          (LIBS='')
      Libevent(SSL):  FALSE (LIBS='')
      Jansson:        TRUE (LIBS='/usr/lib/libjansson.so')
      Jemalloc:       FALSE (LIBS='')
      Zlib:            (LIBS='')
      Systemd:        TRUE (LIBS='/usr/lib/libsystemd.so')
      Libbrotlienc:    (LIBS='')
      Libbrotlidec:    (LIBS='')
    Third-party:
      http-parser:    
      MRuby:          0
      Neverbleed:     0
    Features:
      Applications:   OFF
      HPACK tools:    OFF
      Examples:       OFF
      Threading:      ON
      HTTP/3(EXPERIMENTAL): OFF

Only the library will be built. To build other components (such as applications and examples), set ENABLE_LIB_ONLY=OFF.
-- Configuring done (3.1s)
-- Generating done (0.0s)
-- Build files have been written to: /home/kzl/makepkg/build/nghttp2/src/nghttp2/build
-- Cache values
// Build libnghttp2 as a shared library
BUILD_SHARED_LIBS:BOOL=ON

// Build libnghttp2 in static mode also
BUILD_STATIC_LIBS:BOOL=OFF

// Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/addr2line

// Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

// Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

// Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

// C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

// A wrapper around 'ar' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/gcc-ar

// A wrapper around 'ranlib' adding the appropriate '--plugin' option for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/gcc-ranlib

// Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=-march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Wp,-D_FORTIFY_SOURCE=3 -flto -ffat-lto-objects

// Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

// Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

// Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

// Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

// Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

// Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

// User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

// Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

// Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

// Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

// C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

// Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

// Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

// Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

// Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

// Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

// Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

// C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr

// Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

// System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

// Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

// Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

// Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

// Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

// Flags used by the linker during the creation of modules during all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during the creation of modules during DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of modules during MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of modules during RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

// Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

// Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

// Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

// Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/readelf

// Flags used by the linker during the creation of shared libraries during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs -flto -ffat-lto-objects

// Flags used by the linker during the creation of shared libraries during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of shared libraries during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// If set, runtime paths are not added when installing shared libraries, but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

// If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

// Flags used by the linker during the creation of static libraries during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of static libraries during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of static libraries during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of static libraries during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

// Path to a program.
CMAKE_TAPI:FILEPATH=CMAKE_TAPI-NOTFOUND

// If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

// Build applications (nghttp, nghttpd, nghttpx and h2load)
ENABLE_APP:BOOL=OFF

// Turn on debug output
ENABLE_DEBUG:BOOL=OFF

// Build documentation
ENABLE_DOC:BOOL=OFF

// Build examples
ENABLE_EXAMPLES:BOOL=OFF

// Build failmalloc test program
ENABLE_FAILMALLOC:BOOL=ON

// Build HPACK tools
ENABLE_HPACK_TOOLS:BOOL=ON

// Enable HTTP/3 support
ENABLE_HTTP3:BOOL=OFF

// Build libnghttp2 only.  This is a short hand for -DENABLE_APP=0 -DENABLE_EXAMPLES=0 -DENABLE_HPACK_TOOLS=0
ENABLE_LIB_ONLY:BOOL=ON

// Build libnghttp2 against the MS LIBCMT[d]
ENABLE_STATIC_CRT:BOOL=OFF

// Turn on threading in apps
ENABLE_THREADS:BOOL=ON

// Turn on compile time warnings
ENABLE_WERROR:BOOL=OFF

// Path to a file.
JANSSON_INCLUDE_DIR:PATH=/usr/include

// Path to a library.
JANSSON_LIBRARY:FILEPATH=/usr/lib/libjansson.so

// Path to a file.
JEMALLOC_INCLUDE_DIR:PATH=JEMALLOC_INCLUDE_DIR-NOTFOUND

// Path to a library.
JEMALLOC_LIBRARY:FILEPATH=JEMALLOC_LIBRARY-NOTFOUND

// Path to a library.
LIBEVENT_CORE_LIBRARY:FILEPATH=LIBEVENT_CORE_LIBRARY-NOTFOUND

// Path to a library.
LIBEVENT_EXTRA_LIBRARY:FILEPATH=LIBEVENT_EXTRA_LIBRARY-NOTFOUND

// Path to a file.
LIBEVENT_INCLUDE_DIR:PATH=LIBEVENT_INCLUDE_DIR-NOTFOUND

// Path to a library.
LIBEVENT_OPENSSL_LIBRARY:FILEPATH=LIBEVENT_OPENSSL_LIBRARY-NOTFOUND

// Path to a file.
LIBNGHTTP3_INCLUDE_DIR:PATH=LIBNGHTTP3_INCLUDE_DIR-NOTFOUND

// Path to a library.
LIBNGHTTP3_LIBRARY:FILEPATH=LIBNGHTTP3_LIBRARY-NOTFOUND

// Path to a file.
LIBNGTCP2_CRYPTO_QUICTLS_INCLUDE_DIR:PATH=LIBNGTCP2_CRYPTO_QUICTLS_INCLUDE_DIR-NOTFOUND

// Path to a library.
LIBNGTCP2_CRYPTO_QUICTLS_LIBRARY:FILEPATH=LIBNGTCP2_CRYPTO_QUICTLS_LIBRARY-NOTFOUND

// Path to a file.
LIBNGTCP2_INCLUDE_DIR:PATH=LIBNGTCP2_INCLUDE_DIR-NOTFOUND

// Path to a library.
LIBNGTCP2_LIBRARY:FILEPATH=LIBNGTCP2_LIBRARY-NOTFOUND

// Path to a file.
LIBXML2_INCLUDE_DIR:PATH=/usr/include/libxml2

// Path to a library.
LIBXML2_LIBRARY:FILEPATH=/usr/lib/libxml2.so

// Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=/usr/bin/xmllint

// Path to a library.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/usr/lib/libcrypto.so

// Path to a file.
OPENSSL_INCLUDE_DIR:PATH=/usr/include

// Path to a library.
OPENSSL_SSL_LIBRARY:FILEPATH=/usr/lib/libssl.so

// Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

// pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/usr/bin/pkg-config

// Path to a file.
SYSTEMD_INCLUDE_DIRS:PATH=/usr/include

// Path to a library.
SYSTEMD_LIBRARIES:FILEPATH=/usr/lib/libsystemd.so

// Use jemalloc
WITH_JEMALLOC:BOOL=OFF

// Use libbpf
WITH_LIBBPF:BOOL=OFF

// Use libxml2
WITH_LIBXML2:BOOL=ON

// Use mruby
WITH_MRUBY:BOOL=OFF

// Use neverbleed
WITH_NEVERBLEED:BOOL=OFF

// Use wolfSSL
WITH_WOLFSSL:BOOL=OFF

// Path to a library.
pkgcfg_lib_PC_JANSSON_jansson:FILEPATH=/usr/lib/libjansson.so

// Path to a library.
pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/usr/lib/libxml2.so

// Path to a library.
pkgcfg_lib_PC_SYSTEMD_systemd:FILEPATH=/usr/lib/libsystemd.so

// Path to a library.
pkgcfg_lib__OPENSSL_crypto:FILEPATH=/usr/lib/libcrypto.so

// Path to a library.
pkgcfg_lib__OPENSSL_ssl:FILEPATH=/usr/lib/libssl.so

