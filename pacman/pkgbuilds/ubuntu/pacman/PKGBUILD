# Maintainer: KZL <lz3450@outlook.com>

pkgname=pacman
pkgver=7.0.0.g79
pkgrel=2
epoch=
arch=('x86_64')
url="https://www.archlinux.org/pacman/"
license=('KZL')
backup=(
  "$PREFIX"/etc/makepkg.conf
  "$PREFIX"/etc/makepkg.conf.d/rust.conf
  "$PREFIX"/etc/pacman.conf
)
# _ref="v$pkgver"
source=(
  # git+https://gitlab.archlinux.org/pacman/pacman.git#tag=$_ref
  # git+https://gitlab.archlinux.org/pacman/pacman.git#branch=$_ref
  # git+https://gitlab.archlinux.org/pacman/pacman.git#commit=$_ref
  git+https://gitlab.archlinux.org/pacman/pacman.git
)
sha256sums=('SKIP')

# Compare the output of `gcc -march=native -Q --help=target` in the host system and the build system
# Order of options matters
RPATH_FLAGS="-Wl,-rpath=/$PREFIX/lib"
MAKEPKG_CFLAGS='-march=native -O2 -pipe -fno-plt -fexceptions -fcf-protection -fstack-clash-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer -Wformat -Werror=format-security'
MAKEPKG_CXXFLAGS='$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS'
MAKEPKG_LDFLAGS="-Wl,-O1 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,pack-relative-relocs $RPATH_FLAGS"
MAKEPKG_LTOFLAGS='-flto=auto -ffat-lto-objects'

if (( $(awk '/MemTotal/ {print $2}' /proc/meminfo) < 16 * 1024 * 1024 )); then
  MAKEPKG_CFLAGS="${MAKEPKG_CFLAGS/ -pipe/}"
fi

pkgver() {
  cd $pkgname

  git describe --tags | sed 's/^v//;s/-g.*//;s/-/.g/'
}

prepare() {
  cd $pkgname

  . /etc/os-release
  if [[ "$UBUNTU_CODENAME" == "jammy" ]]; then
    sed -i \
        -e 's|--origin=origin --mirror|--mirror|' \
        scripts/libmakepkg/source/git.sh.in
    MAKEPKG_LDFLAGS="${MAKEPKG_LDFLAGS/ -Wl,-z,pack-relative-relocs/}"
  else
    sed -i \
        -e 's|--origin=origin --mirror|--depth 10 --no-single-branch --origin=origin --mirror|' \
        scripts/libmakepkg/source/git.sh.in
  fi

  sed -i \
      -e '/^CHOST=/a\\n\PREFIX="opt"' \
      -e '/^#NPROC=/c\NPROC="$(nproc)"' \
      -e '/^#CPPFLAGS=/c\CPPFLAGS=""' \
      -e "/^#CFLAGS=/c\CFLAGS=\"$MAKEPKG_CFLAGS\"" \
      -e "/^#CXXFLAGS=/c\CXXFLAGS=\"$MAKEPKG_CXXFLAGS\"" \
      -e "/^#LDFLAGS=/c\LDFLAGS=\"$MAKEPKG_LDFLAGS\"" \
      -e "/^#LTOFLAGS=/c\LTOFLAGS=\"$MAKEPKG_LTOFLAGS\"" \
      -e '/^#MAKEFLAGS=/c\MAKEFLAGS="-j $(nproc) -O"' \
      -e '/^#DEBUG_CFLAGS=/c\DEBUG_CFLAGS="-g"' \
      -e '/^#DEBUG_CXXFLAGS=/c\DEBUG_CXXFLAGS="$DEBUG_CFLAGS"' \
      -e '/^#BUILDDIR=/c\BUILDDIR="/var/cache/makepkg/build"' \
      -e '/^INTEGRITY_CHECK=/s/(.*)/(sha256)/' \
      -e '/^#PKGDEST=/c\PKGDEST="/var/cache/makepkg/packages"' \
      -e '/^#SRCDEST=/c\SRCDEST="/var/cache/makepkg/sources"' \
      -e '/^#SRCPKGDEST=/c\SRCPKGDEST="/var/cache/makepkg/srcpackages"' \
      -e '/^#LOGDEST=/c\LOGDEST="/var/cache/makepkg/makepkglogs"' \
      -e '/^#PACKAGER=/c\PACKAGER="KZL <lz3450@outlook.com>"' \
      -e '/^OPTIONS=/s/libtool/!libtool/' \
      -e '/^OPTIONS=/s/!lto/lto/' \
      etc/makepkg.conf.in

  sed -i \
      -e 's|\(RUSTFLAGS=\"[^\"]*\)\"|\1 -C link-arg='"$RPATH_FLAGS"'"|' \
      -e '/^#RUSTFLAGS=/s/#//' \
      -e '/^#DEBUG_RUSTFLAGS=/s/#//' \
      etc/makepkg.conf.d/rust.conf.in

  # local _repo=$(grep -Po '(?<=^VERSION_CODENAME=).*' /etc/os-release | tr -d '"')
  local _repo="ubuntu"
  cat >> etc/pacman.conf.in << EOF

[$_repo]
SigLevel = Optional TrustAll
Server = file:///home/.repository/\$repo
EOF
}

build() {
  cd $pkgname

  msg2 "Configuring..."
  meson setup \
    --prefix "/$PREFIX" \
    --libdir lib \
    --sysconfdir etc \
    --auto-features disabled \
    --buildtype plain \
    -D buildstatic=false \
    -D crypto=openssl \
    -D curl=enabled \
    -D doc=disabled \
    -D doxygen=disabled \
    -D file-seccomp=enabled \
    -D gpgme=enabled \
    -D pkg-ext='.pkg.tar.zst' \
    -D src-ext='.src.tar.zst' \
    -D use-git-version=false \
    build

  msg2 "Compiling..."
  meson compile -C build
}

check() {
  cd $pkgname

  meson test -C build
}

package() {
  cd $pkgname

  meson install -C build --destdir "$pkgdir"

  mv -v "$pkgdir/$PREFIX/share/zsh" "$pkgdir/usr/share/zsh"
  mv -v "$pkgdir/usr/share/zsh/site-functions" "$pkgdir/usr/share/zsh/vendor-completions"
  rm -v "$pkgdir/usr/share/bash-completion/completions/makepkg"
}
