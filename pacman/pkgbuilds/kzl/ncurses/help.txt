
Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]

  --with-rel-version=XXX  override derived release version
  --with-abi-version=XXX  override derived ABI version
  --with-system-type=XXX  test: override derived host system-type
  --with-abi-altered=XXX  override visible ABI version, for packaging
  --without-ada           suppress check for Ada compiler
  --without-cxx           do not adjust ncurses bool to match C++
  --without-cxx-binding   do not build C++ binding and demo
  --disable-db-install    suppress install of terminal database
  --without-manpages      suppress install of manpages
  --without-progs         suppress build/install with programs (e.g., tic)
  --without-tests         suppress build/install with test-programs
  --without-curses-h      install curses.h as ncurses.h only
  --with-config-suffix=X  name ncurses*X-config file with X
  --with-pkg-config[=CMD] enable/disable use of pkg-config and its name CMD
  --with-pkg-config-libdir[=XXX] use given directory for installing pc-files
  --enable-pc-files       generate and install .pc files for pkg-config
  --with-pc-suffix[=XXX]  suffix pkg-config files with XXX
  --enable-mixed-case     tic should assume mixed-case filenames
  --with-install-prefix=DESTDIR use DESTDIR as installation directory prefix
  --enable-install-prefix merge DESTDIR with installation prefix
Build-Tools Needed to Compile Temporary Applications for Cross-compiling:
  --with-build-cc=XXX     the build C compiler ($BUILD_CC)
  --with-build-cpp=XXX    the build C preprocessor ($BUILD_CPP)
  --with-build-cflags=XXX the build C compiler-flags ($BUILD_CFLAGS)
  --with-build-cppflags=XXX the build C preprocessor-flags ($BUILD_CPPFLAGS)
  --with-build-ldflags=XXX the build linker-flags ($BUILD_LDFLAGS)
  --with-build-libs=XXX   the build libraries (${BUILD_LIBS})
Options to Specify the Libraries Built/Used:
  --disable-libtool-version  enable to use libtool's incompatible naming scheme
  --with-libtool          generate libraries with libtool
  --with-shared           generate shared-libraries
  --with-normal           generate normal-libraries (default)
  --with-debug            generate debug-libraries (default)
  --with-profile          generate profile-libraries
  --with-cxx-shared       generate C++ shared-libraries
  --with-lib-prefix       override library-prefix
  --with-termlib          generate separate terminfo library
  --with-ticlib           generate separate tic library
  --enable-rpath          use rpath option when generating shared libraries
  --disable-relink        relink shared libraries during install
  --with-shlib-version[={rel|abi}] use release or ABI version in shared library file names
  --with-libtool-opts[=XXX] give libtool additional options XXX
  --with-export-syms[=SYM-FILE] limit symbols exported by libtool to those listed in SYM-FILE
  --with-versioned-syms[=MAP-FILE] version ELF shared library symbols per MAP-FILE
  --with-gpm              use Alessandro Rubini's GPM library
  --without-dlsym         do not use dlsym() to load GPM dynamically
  --with-pcre2            use PCRE2 for regular-expressions
  --with-sysmouse         use sysmouse (FreeBSD console)
  --disable-lib-suffixes  disable library suffixes
  --disable-rpath-hack    don't add rpath options for additional libraries
  --disable-pkg-ldflags   disable extra LDFLAGS for package-scripts
Fine-Tuning Your Configuration:
  --with-extra-suffix[=X] append extra suffix X to header/library paths
  --disable-overwrite     put headers in subdir, omit link to -lcurses
  --disable-database      do not use terminfo, only fallbacks/termcap
  --with-database=XXX     specify terminfo source to install
  --with-hashed-db        specify hashed-database library
  --with-fallbacks=XXX    specify list of fallback terminal descriptions
  --with-tic-path=XXX     specify path of tic for fallbacks
  --with-infocmp-path=XXX     specify path of infocmp for fallbacks
  --without-xterm-new     specify if xterm terminfo should be old version
  --with-xterm-kbs[=XXX]  specify if xterm backspace sends BS or DEL
  --with-terminfo-dirs=XXX specify list of terminfo directories (default: DATADIR/terminfo)
  --with-default-terminfo-dir=DIR default terminfo directory (default: DATADIR/terminfo)
  --disable-big-core      assume machine has little memory
  --disable-big-strings   assume compiler has only standard-size strings
  --enable-termcap        compile in termcap fallback support
  --with-termpath=XXX     specify list of termcap files (default: /etc/termcap:/usr/share/misc/termcap)
  --enable-getcap         fast termcap load, no xrefs to terminfo
  --enable-getcap-cache   cache translated termcaps in ~/.terminfo
  --disable-home-terminfo drop ~/.terminfo from terminfo search-path
  --disable-root-environ  restrict root use of ncurses environment variables
  --disable-root-access   restrict file-access when running setuid
  --disable-setuid-environ restrict setuid use of ncurses environment variables
  --enable-symlinks       make tic use symbolic links not hard links
  --enable-broken_linker  compile with broken-linker support code
  --enable-bsdpad         recognize BSD-style prefix padding
  --disable-widec         compile without wide character and UTF-8 support
  --disable-lp64          allow chtype to be long (ignore _LP64)
  --disable-largefile     omit support for large files
  --disable-tparm-varargs compile tparm() without varargs interface
  --disable-tic-depends   link tic library without explicit dependency on ncurses library
  --enable-wattr-macros   enable wattr* macros
  --with-x11-rgb=FILE     obtain X11 color definitions from FILE (default: EPREFIX/lib/X11/rgb.txt)
  --with-bool=TYPE        fall back to TYPE for curses 'bool' typedef
  --with-caps=alt         compile with alternate Caps file
  --with-chtype=TYPE      override type of chtype
  --with-ospeed=TYPE      override type of ospeed variable
  --with-mmask-t=TYPE     override type of mmask_t
  --with-ccharw-max=XXX   override size CCHARW_MAX
  --enable-signed-char    use signed chars for Boolean array in term.h
  --with-tparm-arg=TYPE   override parameter type of tparm
  --with-rcs-ids          compile-in RCS identifiers
Options to Specify How Manpages are Installed:
  --with-manpage-format   specify manpage-format: gzip/compress/bzip2/xz,
                          BSDI/normal and optionally formatted/catonly,
                          e.g., gzip,formatted
  --with-manpage-renames  specify manpage-renaming
  --with-manpage-aliases  specify manpage-aliases using .so
  --with-manpage-symlinks specify manpage-aliases using symlinks
  --with-manpage-tbl      specify manpage processing with tbl
Extensions:
  --disable-ext-funcs     disable function-extensions
  --enable-sp-funcs       enable SCREEN-extensions
  --enable-term-driver    enable terminal-driver
  --enable-const          compile with extra/non-standard const
  --enable-ext-colors     compile for 256-color support
  --enable-ext-mouse      compile for extended mouse-encoding
  --enable-ext-putwin     compile with extended putwin/screendump
  --enable-no-padding     compile with $NCURSES_NO_PADDING code
  --enable-sigwinch       compile with SIGWINCH handler
  --enable-tcap-names     compile with user-definable terminal capabilities
Reentrant Code:
  --with-pthread          use POSIX thread library
  --enable-pthreads-eintr enable EINTR in wgetch with pthreads
  --enable-weak-symbols   enable weak-symbols for pthreads
  --enable-reentrant      compile with reentrant code
  --disable-opaque-curses do not make WINDOW, etc., structures opaque
  --disable-opaque-form   do not make form library structures opaque
  --disable-opaque-menu   do not make menu library structures opaque
  --disable-opaque-panel  do not make panel library structures opaque
  --with-wrap-prefix=XXX  override prefix used for public variables
Development Code:
  --without-develop       disable development options
  --enable-check-size     compile-in code to detect screensize of serial terminals
  --enable-hard-tabs      compile with hard-tabs code
  --enable-xmc-glitch     compile with support for xmc (magic-cookie)
Experimental Code:
  --disable-assumed-color do not assume anything about default-colors
  --disable-hashmap       compile without hashmap scrolling-optimization
  --enable-colorfgbg      compile-in experimental $COLORFGBG code
  --enable-fvisibility    compile with -fvisibility=hidden
  --enable-interop        compile-in interop bindings
  --enable-safe-sprintf   compile with experimental safe-sprintf code
  --disable-scroll-hints  compile without scroll-hints code
  --enable-wgetch-events  compile with wgetch-events code
  --enable-exp-win32      compile with experimental-Windows driver
Testing/development Options:
  --disable-echo          do not display "compiling" commands
  --disable-stripping     do not strip (debug info) installed executables
  --with-strip-program=XX specify program to use when stripping in install
  --enable-warnings       test: turn on gcc compiler warnings
  --enable-stdnoreturn    enable C11 _Noreturn feature for diagnostics
  --enable-string-hacks   work around bogus compiler/loader warnings
  --enable-assertions     test: turn on generation of assertion code
  --with-dmalloc          test: use Gray Watson's dmalloc library
  --with-dbmalloc         test: use Conor Cahill's dbmalloc library
  --with-valgrind         test: use valgrind
  --disable-leaks         test: free permanent memory, analyze leaks
  --enable-expanded       test: generate functions for certain macros
  --disable-macros        test: use functions rather than macros
  --with-trace            test: add trace() function to all models of ncurses
  --disable-gnat-projects test: disable GNAT projects even if usable
Ada Binding Options:
  --with-ada-compiler[=CMD] use CMD as Ada95 compiler (default: gnatmake)
  --with-ada-include=DIR  find Ada95 includes in DIR (default: PREFIX/share/ada/adainclude)
  --with-ada-objects=DIR  find Ada95 objects in DIR (default: PREFIX/lib/ada/adalib)
  --with-ada-sharedlib    build Ada95 shared library; requires GNAT project support
  --with-ada-libname[=XXX]  use XXX as Ada95 library name
Library basenames for pkgsrc:
  --with-form-libname[=XXX] override ifelse(,,form,) basename of library
  --with-menu-libname[=XXX] override ifelse(,,menu,) basename of library
  --with-panel-libname[=XXX] override ifelse(,,panel,) basename of library
  --with-cxx-libname[=XXX] override ifelse(ncurses++,,cxx,ncurses++) basename of library

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
              headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags
  CXXCPP      C++ preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

