Configuration of MPFR 4.2.2:

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules   less verbose build output (undo: "make V=1")
  --disable-silent-rules  verbose build output (undo: "make V=0")
  --disable-maintainer-mode
                          disable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-gmp-internals  enable use of GMP undocumented functions [default=no]
  --enable-assert         enable ASSERT checking [default=no]
  --enable-logging        enable MPFR logging (needs nested functions
                          and the 'cleanup' attribute) [default=no]
  --disable-thread-safe   explicitly disable TLS support
  --enable-thread-safe    build MPFR as thread safe, i.e. with TLS support
                          (the system must support it) [default=autodetect]
  --enable-shared-cache   enable use of caches shared by all threads,
                          for all MPFR constants.  It usually makes MPFR
                          dependent on PTHREAD [default=no]
  --enable-warnings       allow MPFR to output warnings to stderr [default=no]
  --enable-tests-timeout=NUM
                          [for developers] enable timeout for test programs
                          (NUM seconds, <= 9999) [default=no]; if this is
                          enabled, the environment variable $MPFR_TESTS_TIMEOUT
                          overrides NUM (0: no timeout)
  --enable-tune-for-coverage
                          [for developers] tune MPFR for coverage tests
  --disable-decimal-float explicitly disable decimal floats support
  --enable-decimal-float  build conversion functions from/to decimal floats
                          (see INSTALL file for details) [default=auto]
  --disable-float128      explicitly disable binary128 support
  --enable-float128       build conversion functions from/to binary128
                          (_Float128 or __float128) [default=autodetect]
  --enable-debug-prediction
                          [for developers] enable debug of branch prediction
                          (for x86 and x86-64 with GCC, static libs)
  --enable-lto            build MPFR with link-time-optimization
                          (experimental) [default: no]
  --enable-formally-proven-code
                          use formally proven code when available
                          (needs a C99 compiler) [default=no]
  --enable-dependency-tracking
                          do not reject slow dependency extractors
  --disable-dependency-tracking
                          speeds up one-time build
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-pic[=PKGS]     try to use only PIC/non-PIC objects [default=use
                          both]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --enable-aix-soname=aix|svr4|both
                          shared library versioning (aka "SONAME") variant to
                          provide on AIX, [default=aix].
  --disable-libtool-lock  avoid locking (might break parallel builds)

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-gmp-include=DIR  GMP include directory
  --with-gmp-lib=DIR      GMP lib directory
  --with-gmp=DIR          GMP install directory
  --with-gmp-build=DIR    GMP build directory (please read INSTALL file)
  --with-mini-gmp=DIR     use mini-gmp (sources in DIR) instead of GMP
                          (experimental, please read doc/mini-gmp file)
  --with-mulhigh-size=NUM internal threshold table for mulhigh
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
                          compiler's sysroot if not specified).

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  LT_SYS_LIBRARY_PATH
              User-defined run-time library search path.

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to the package provider.
