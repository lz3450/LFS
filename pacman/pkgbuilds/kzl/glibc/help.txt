Configuration of GNU C Library (see version.h):

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --disable-static-c++-tests
                          disable static C++ tests[default=no]
  --disable-static-c++-link-check
                          disable static C++ link check [default=no]
  --disable-sanity-checks really do not use threads (should not be used except
                          in special situations) [default=yes]
  --enable-shared         build shared library [default=yes if GNU ld]
  --enable-profile        build profiled library [default=no]
  --disable-default-pie   Do not build glibc programs and the testsuite as PIE
                          [default=no]
  --disable-timezone-tools
                          do not install timezone tools [default=install]
  --enable-hardcoded-path-in-tests
                          hardcode newly built glibc path in tests
                          [default=no]
  --disable-hidden-plt    do not hide internal function calls to avoid PLT
  --enable-bind-now       disable lazy relocations in DSOs
  --enable-stack-protector=[yes|no|all|strong]
                          Use -fstack-protector[-all|-strong] to detect glibc
                          buffer overflows
  --enable-static-nss     build static NSS modules [default=no]
  --disable-force-install don't force installation of files from this package,
                          even if they are older than the installed files
  --enable-maintainer-mode
                          enable make rules and dependencies not useful (and
                          sometimes confusing) to the casual installer
  --enable-kernel=VERSION compile for compatibility with kernel not older than
                          VERSION
  --disable-werror        do not build with -Werror
  --enable-multi-arch     enable single DSO with optimizations for multiple
                          architectures
  --enable-memory-tagging enable memory tagging if supported by the
                          architecture [default=no]
  --enable-systemtap      enable systemtap static probe points [default=no]
  --disable-build-nscd    disable building and installing the nscd daemon
  --disable-nscd          library functions will not contact the nscd daemon
  --enable-pt_chown       Enable building and installing pt_chown
  --enable-mathvec        Enable building and installing mathvec [default
                          depends on architecture]
  --enable-cet            enable Intel Control-flow Enforcement Technology
                          (CET), x86 only
  --disable-scv           syscalls will not use scv instruction, even if the
                          kernel supports it, powerpc only
  --enable-fortify-source[=1|2|3]
                          Use -D_FORTIFY_SOURCE=[1|2|3] to control code
                          hardening, defaults to highest possible value
                          supported by the build compiler.

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-pkgversion=PKG   Use PKG in the version string in place of "GNU libc"
  --with-bugurl=URL       Direct users to URL to report a bug
  --with-gd=DIR           find libgd include dir and library with prefix DIR
  --with-gd-include=DIR   find libgd include files in DIR
  --with-gd-lib=DIR       find libgd library files in DIR
  --with-binutils=PATH    specify location of binutils (as and ld)
  --with-selinux          if building with SELinux support
  --with-headers=PATH     location of system headers to use (for example
                          /usr/src/linux/include) [default=compiler default]
  --with-nonshared-cflags=CFLAGS
                          build nonshared libraries with additional CFLAGS
  --with-rtld-early-cflags=CFLAGS
                          build early initialization with additional CFLAGS
  --with-timeoutfactor=NUM
                          specify an integer to scale the timeout
  --with-man-pages=VERSION
                          tie manual to a specific man-pages version
  --with-cpu=CPU          select code for CPU variant

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CXX         C++ compiler command
  CXXFLAGS    C++ compiler flags

Use these variables to override the choices made by 'configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <https://sourceware.org/bugzilla/>.
GNU C Library home page: <https://www.gnu.org/software/glibc/>.
General help using GNU software: <https://www.gnu.org/gethelp/>.
