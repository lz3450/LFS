#!/bin/bash
#
# updaterepo
#

set -e
set -u
set -o pipefail
# set -x

umask 0022

SCRIPT_NAME="$(basename "$0")"
SCRIPT_PATH="$(realpath "$0")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

################################################################################

### libraries
. "$SCRIPT_DIR"/lib/log.sh
. "$SCRIPT_DIR"/lib/pacman.sh

### constants & variables
REPO_ROOT="/home/.repository"
PACKAGE_DIR="$HOME/makepkg/packages"
ARCHIVE_DIR="$HOME/makepkg/archive"

### options and arguments
arg_repo=""
declare -i opt_replace=0
declare -i opt_clear=0

### functions
update() {
    local _pkg="$1"
    local _pkg_file="$(pacman_get_pkg_file "$_pkg" "$PACKAGE_DIR")"

    mkdir -p -- "$ARCHIVE_DIR"

    if [[ -f "$PACKAGE_DIR/$_pkg_file" ]]; then
        sudo cp -f -- "$PACKAGE_DIR/$_pkg_file" "$repo_dir"
        mv -- "$PACKAGE_DIR/$_pkg_file" "$ARCHIVE_DIR"
        sudo repo-add -R "$repo_path" "$repo_dir/$_pkg_file"
    fi
}

usage() {
    cat << EOF

updaterepo

Usage: $SCRIPT_NAME -h | --help
Usage: $SCRIPT_NAME -R | --replace -r | --repo <kzl|jammy|noble>
Usage: $SCRIPT_NAME -c | --clear -r | --repo <kzl|jammy|noble>

    -h, --help      display this help message and exit
    -r, --repo      build repo (kzl, jammy, noble)
    -R, --replace   replace the existing repository file with an empty one
    -c, --clear     remove the repository

EOF
}

################################################################################

while (( $# > 0 )); do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -r|--repo)
            shift
            arg_repo="$1"
            ;;
        -R|--replace)
            opt_replace=1
            ;;
        -c|--clear)
            opt_clear=1
            ;;
        *)
            error "Unknown option \"$1\"" 128
            ;;
    esac
    shift
done

case "$arg_repo" in
    kzl)
        repo_dir="$REPO_ROOT/$arg_repo"
        repo_path="$repo_dir/$arg_repo.db.$EXTENSION"
        ;;
    jammy|noble|questing)
        repo_dir="$REPO_ROOT/ubuntu"
        repo_path="$repo_dir/ubuntu.db.$EXTENSION"
        ;;
    *)
        error "Unknown repo name \"$arg_repo\"" 128
        ;;
esac

if [[ -d "$LFS_PACMAN_ROOT_DIR/pkgbuilds/$arg_repo/" ]]; then
    readarray -t pkgs < <(find "$LFS_PACMAN_ROOT_DIR/pkgbuilds/$arg_repo/" -mindepth 1 -maxdepth 1 -type d -printf "%f\n" | LC_ALL=C sort -n)
else
    error "Failed to find pkgbuilds directory for \"$arg_repo\"." 2
fi

### clear
if (( $opt_clear > 0 )); then
    while true; do
        read -p "Do you want to clear the repository \"$arg_repo\"? " yn
        case "$yn" in
            [Yy]*)
                sudo rm -vrf -- "$repo_dir"
                # sudo find "$repo_dir" -type f -delete
                info "Repository \"$arg_repo\" has been removed"
                exit 0
                ;;
            [Nn]*)
                exit 0
                ;;
            *)
                echo "Please answer yes(y) or no(n)."
                ;;
        esac
    done
fi

if [[ ! -d "$repo_dir" ]]; then
    sudo mkdir -p -- "$repo_dir"
fi

if [[ ! -d "$PACKAGE_DIR" ]]; then
    mkdir -p -- "$PACKAGE_DIR"
fi

if (( $opt_replace > 0 )); then
    sudo find "$repo_dir" -name "*.pkg.$EXTENSION" -exec mv -v -t "$PACKAGE_DIR" -- {} +
    sudo chown -R -- "$(stat -c '%U:%G' "$PACKAGE_DIR")" "$PACKAGE_DIR"
    sudo find "$repo_dir" -mindepth 1 -delete
fi

if [[ ! -f "$repo_path" ]]; then
    info "Creating empty repo: $arg_repo.db.$EXTENSION..."
    sudo repo-add "$repo_path"
    info "Done"
fi

################################################################################

for pkgbase in "${pkgs[@]}"; do
    info "Updating $pkgbase..."
    for pkgname in $(pacman_get_pkgnames "$pkgbase"); do
        update "$pkgname"
    done
done

if [[ -z $(find "$PACKAGE_DIR" -empty) ]]; then
    warn "$PACKAGE_DIR is not empty, please check"
else
    log_cyan "Successfully updated repository \"$arg_repo\""
fi

### error codes
# 2: failed to find pkgbuilds directory
# 128: unknown option or invalid argument
